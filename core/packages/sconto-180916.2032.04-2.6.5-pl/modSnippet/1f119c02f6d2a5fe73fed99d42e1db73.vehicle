<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'e69eb8d1c57c720a05b289fa2d4f9f5b',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '1f119c02f6d2a5fe73fed99d42e1db73',
  'native_key' => 52,
  'object' => '{"id":52,"source":1,"property_preprocess":0,"name":"BannerY","description":"Show ads on your site","editor_type":0,"category":15,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n\\/* @var pdoFetch $pdoFetch *\\/\\nif (!$modx->getService(\'pdoFetch\')) {return \'You need to install pdoTools to use this snippet!\';}\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\n$pdoFetch->addTime(\'pdoTools loaded\');\\n$modx->lexicon->load(\'bannery:default\');\\n$modx->addPackage(\'bannery\', MODX_CORE_PATH . \'components\\/bannery\\/model\\/\');\\n\\nif (!empty($tplOuter)) {$tplWrapper = $tplOuter;}\\nif (empty($outputSeparator)) {$outputSeparator = \\"\\\\n\\";}\\n$class = \'byAd\';\\n\\n\\/\\/ Adding extra parameters into special place so we can put them in results\\n\\/** @var modSnippet $snippet *\\/\\n$additionalPlaceholders = array();\\nif ($snippet = $modx->getObject(\'modSnippet\', array(\'name\' => \'BannerY\'))) {\\n\\t$properties = unserialize($snippet->properties);\\n\\tforeach ($scriptProperties as $k => $v) {\\n\\t\\tif (!isset($properties[$k])) {\\n\\t\\t\\t$additionalPlaceholders[$k] = $v;\\n\\t\\t}\\n\\t}\\n}\\n\\/\\/ ---\\n\\n$date = date(\'Y-m-d H:i:s\');\\n$where = array(\\n\\t\\"({$class}.start IS NULL OR {$class}.start <= \'{$date}\') AND ({$class}.end IS NULL OR {$class}.end >= \'{$date}\')\\"\\n);\\nif (empty($showInactive)) {\\n\\t$where[$class.\'.active\'] = 1;\\n}\\nif (!empty($position)) {\\n\\t$where[\'byAdPosition.position\'] = $position;\\n}\\nelseif (!empty($positions)) {\\n\\t$where[\'byAdPosition.position:IN\'] = array_map(\'trim\', explode(\',\', $positions));\\n}\\n\\nif (empty($sortby)) {\\n\\t$sortby = \'RAND()\';\\n}\\nelseif ($sortby == \'idx\' || $sortby == \'index\') {\\n\\t$sortby = \'byAdPosition.idx\';\\n}\\nelse {\\n\\t$sortby = $class.\'.\'.$sortby;\\n}\\n\\n$innerJoin = array(\\n\\t\'byAdPosition\' => array(\\n\\t\\t\'alias\' => \'byAdPosition\',\\n\\t\\t\'on\' => $class.\'.id = byAdPosition.ad\'\\n\\t)\\n);\\n\\n\\/\\/ Fields to select\\n$select = array(\\n\\t$class => \'all\',\\n\\t\'byAdPosition\' => \'`byAdPosition`.`id` as `adposition`, `byAdPosition`.`ad`\'\\n);\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'where\',\'innerJoin\',\'select\') as $v) {\\n\\tif (!empty($scriptProperties[$v])) {\\n\\t\\t$tmp = $modx->fromJSON($scriptProperties[$v]);\\n\\t\\tif (is_array($tmp)) {\\n\\t\\t\\t$$v = array_merge($$v, $tmp);\\n\\t\\t}\\n\\t}\\n\\tunset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n$default = array(\\n\\t\'class\' => $class,\\n\\t\'innerJoin\' => $modx->toJSON($innerJoin),\\n\\t\'where\' => $modx->toJSON($where),\\n\\t\'select\' => $modx->toJSON($select),\\n\\t\'sortby\' => $sortby,\\n\\t\'groupby\' => $class.\'.id\',\\n\\t\'return\' => \'data\',\\n\\t\'disableConditions\' => true,\\n);\\n\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties));\\n$rows = $pdoFetch->run();\\n\\n$output = array();\\n$default_source = $modx->getOption(\'bannery_media_source\', null, $modx->getOption(\'default_media_source\'), true);\\n$sources = array();\\nforeach ($rows as $row) {\\n\\t$source = !empty($row[\'source\'])\\n\\t\\t? $row[\'source\']\\n\\t\\t: $default_source;\\n\\n\\tif (!isset($sources[$row[\'source\']])) {\\n\\t\\t\\/** @var modMediaSource $source *\\/\\n\\t\\tif ($source = $modx->getObject(\'sources.modMediaSource\', $source)) {\\n\\t\\t\\t$source->initialize($modx->context->key);\\n\\t\\t}\\n\\t\\t$sources[$row[\'source\']] = $source;\\n\\t}\\n\\telse {\\n\\t\\t$source = $sources[$row[\'source\']];\\n\\t}\\n\\n\\tif (!empty($source) && $source instanceof modMediaSource && !empty($row[\'image\'])) {\\n\\t\\t$row[\'image\'] = $source->getObjectUrl($row[\'image\']);\\n\\t}\\n\\n\\t$row[\'idx\'] = $pdoFetch->idx++;\\n\\t$tpl = $pdoFetch->defineChunk($row);\\n\\tif (!empty($additionalPlaceholders)) {\\n\\t\\t$row = array_merge($additionalPlaceholders, $row);\\n\\t}\\n\\n\\t$output[] = !empty($tpl)\\n\\t\\t? $pdoFetch->getChunk($tpl, $row, $pdoFetch->config[\'fastMode\'])\\n\\t\\t: \'<pre>\'.$pdoFetch->getChunk(\'\', $row).\'<\\/pre>\';\\n}\\n\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t$output[\'log\'] = \'<pre class=\\"pdoUsersLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\n\\/\\/ Return output\\nif (!empty($toSeparatePlaceholders)) {\\n\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n}\\nelse {\\n\\t$output = implode($outputSeparator, $output);\\n\\n\\tif (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\n\\t\\t$output = $pdoFetch->getChunk($tplWrapper, array(\'output\' => $output), $pdoFetch->config[\'fastMode\']);\\n\\t}\\n\\n\\tif (!empty($toPlaceholder)) {\\n\\t\\t$modx->setPlaceholder($toPlaceholder, $output);\\n\\t}\\n\\telse {\\n\\t\\treturn $output;\\n\\t}\\n}","locked":0,"properties":"a:18:{s:9:\\"positions\\";a:7:{s:4:\\"name\\";s:9:\\"positions\\";s:4:\\"desc\\";s:22:\\"bannery_prop_positions\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:20:\\"bannery_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fastMode\\";a:7:{s:4:\\"name\\";s:8:\\"fastMode\\";s:4:\\"desc\\";s:21:\\"bannery_prop_fastMode\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:18:\\"bannery_prop_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:5;s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:19:\\"bannery_prop_offset\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:19:\\"bannery_prop_sortby\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:7:{i:0;a:2:{s:4:\\"text\\";s:6:\\"Random\\";s:5:\\"value\\";s:6:\\"RAND()\\";}i:1;a:2:{s:4:\\"text\\";s:5:\\"Index\\";s:5:\\"value\\";s:3:\\"idx\\";}i:2;a:2:{s:4:\\"text\\";s:4:\\"Name\\";s:5:\\"value\\";s:4:\\"name\\";}i:3;a:2:{s:4:\\"text\\";s:3:\\"Url\\";s:5:\\"value\\";s:3:\\"url\\";}i:4;a:2:{s:4:\\"text\\";s:5:\\"Image\\";s:5:\\"value\\";s:5:\\"image\\";}i:5;a:2:{s:4:\\"text\\";s:6:\\"Active\\";s:5:\\"value\\";s:6:\\"active\\";}i:6;a:2:{s:4:\\"text\\";s:11:\\"Description\\";s:5:\\"value\\";s:11:\\"description\\";}}s:5:\\"value\\";s:6:\\"RAND()\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:20:\\"bannery_prop_sortdir\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"outputSeparator\\";a:7:{s:4:\\"name\\";s:15:\\"outputSeparator\\";s:4:\\"desc\\";s:28:\\"bannery_prop_outputSeparator\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\"\\n\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:18:\\"bannery_prop_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"showInactive\\";a:7:{s:4:\\"name\\";s:12:\\"showInactive\\";s:4:\\"desc\\";s:25:\\"bannery_prop_showInactive\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:16:\\"bannery_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:4:\\"byAd\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tplFirst\\";a:7:{s:4:\\"name\\";s:8:\\"tplFirst\\";s:4:\\"desc\\";s:21:\\"bannery_prop_tplFirst\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tplLast\\";a:7:{s:4:\\"name\\";s:7:\\"tplLast\\";s:4:\\"desc\\";s:20:\\"bannery_prop_tplLast\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"tplOdd\\";a:7:{s:4:\\"name\\";s:6:\\"tplOdd\\";s:4:\\"desc\\";s:19:\\"bannery_prop_tplOdd\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tplWrapper\\";a:7:{s:4:\\"name\\";s:10:\\"tplWrapper\\";s:4:\\"desc\\";s:23:\\"bannery_prop_tplWrapper\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"wrapIfEmpty\\";a:7:{s:4:\\"name\\";s:11:\\"wrapIfEmpty\\";s:4:\\"desc\\";s:24:\\"bannery_prop_wrapIfEmpty\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:26:\\"bannery_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"toSeparatePlaceholders\\";a:7:{s:4:\\"name\\";s:22:\\"toSeparatePlaceholders\\";s:4:\\"desc\\";s:35:\\"bannery_prop_toSeparatePlaceholders\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"bannery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/bannery\\/elements\\/snippets\\/snippet.bannery.php","content":"\\/** @var array $scriptProperties *\\/\\n\\/* @var pdoFetch $pdoFetch *\\/\\nif (!$modx->getService(\'pdoFetch\')) {return \'You need to install pdoTools to use this snippet!\';}\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\n$pdoFetch->addTime(\'pdoTools loaded\');\\n$modx->lexicon->load(\'bannery:default\');\\n$modx->addPackage(\'bannery\', MODX_CORE_PATH . \'components\\/bannery\\/model\\/\');\\n\\nif (!empty($tplOuter)) {$tplWrapper = $tplOuter;}\\nif (empty($outputSeparator)) {$outputSeparator = \\"\\\\n\\";}\\n$class = \'byAd\';\\n\\n\\/\\/ Adding extra parameters into special place so we can put them in results\\n\\/** @var modSnippet $snippet *\\/\\n$additionalPlaceholders = array();\\nif ($snippet = $modx->getObject(\'modSnippet\', array(\'name\' => \'BannerY\'))) {\\n\\t$properties = unserialize($snippet->properties);\\n\\tforeach ($scriptProperties as $k => $v) {\\n\\t\\tif (!isset($properties[$k])) {\\n\\t\\t\\t$additionalPlaceholders[$k] = $v;\\n\\t\\t}\\n\\t}\\n}\\n\\/\\/ ---\\n\\n$date = date(\'Y-m-d H:i:s\');\\n$where = array(\\n\\t\\"({$class}.start IS NULL OR {$class}.start <= \'{$date}\') AND ({$class}.end IS NULL OR {$class}.end >= \'{$date}\')\\"\\n);\\nif (empty($showInactive)) {\\n\\t$where[$class.\'.active\'] = 1;\\n}\\nif (!empty($position)) {\\n\\t$where[\'byAdPosition.position\'] = $position;\\n}\\nelseif (!empty($positions)) {\\n\\t$where[\'byAdPosition.position:IN\'] = array_map(\'trim\', explode(\',\', $positions));\\n}\\n\\nif (empty($sortby)) {\\n\\t$sortby = \'RAND()\';\\n}\\nelseif ($sortby == \'idx\' || $sortby == \'index\') {\\n\\t$sortby = \'byAdPosition.idx\';\\n}\\nelse {\\n\\t$sortby = $class.\'.\'.$sortby;\\n}\\n\\n$innerJoin = array(\\n\\t\'byAdPosition\' => array(\\n\\t\\t\'alias\' => \'byAdPosition\',\\n\\t\\t\'on\' => $class.\'.id = byAdPosition.ad\'\\n\\t)\\n);\\n\\n\\/\\/ Fields to select\\n$select = array(\\n\\t$class => \'all\',\\n\\t\'byAdPosition\' => \'`byAdPosition`.`id` as `adposition`, `byAdPosition`.`ad`\'\\n);\\n\\n\\/\\/ Add custom parameters\\nforeach (array(\'where\',\'innerJoin\',\'select\') as $v) {\\n\\tif (!empty($scriptProperties[$v])) {\\n\\t\\t$tmp = $modx->fromJSON($scriptProperties[$v]);\\n\\t\\tif (is_array($tmp)) {\\n\\t\\t\\t$$v = array_merge($$v, $tmp);\\n\\t\\t}\\n\\t}\\n\\tunset($scriptProperties[$v]);\\n}\\n$pdoFetch->addTime(\'Conditions prepared\');\\n\\n$default = array(\\n\\t\'class\' => $class,\\n\\t\'innerJoin\' => $modx->toJSON($innerJoin),\\n\\t\'where\' => $modx->toJSON($where),\\n\\t\'select\' => $modx->toJSON($select),\\n\\t\'sortby\' => $sortby,\\n\\t\'groupby\' => $class.\'.id\',\\n\\t\'return\' => \'data\',\\n\\t\'disableConditions\' => true,\\n);\\n\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties));\\n$rows = $pdoFetch->run();\\n\\n$output = array();\\n$default_source = $modx->getOption(\'bannery_media_source\', null, $modx->getOption(\'default_media_source\'), true);\\n$sources = array();\\nforeach ($rows as $row) {\\n\\t$source = !empty($row[\'source\'])\\n\\t\\t? $row[\'source\']\\n\\t\\t: $default_source;\\n\\n\\tif (!isset($sources[$row[\'source\']])) {\\n\\t\\t\\/** @var modMediaSource $source *\\/\\n\\t\\tif ($source = $modx->getObject(\'sources.modMediaSource\', $source)) {\\n\\t\\t\\t$source->initialize($modx->context->key);\\n\\t\\t}\\n\\t\\t$sources[$row[\'source\']] = $source;\\n\\t}\\n\\telse {\\n\\t\\t$source = $sources[$row[\'source\']];\\n\\t}\\n\\n\\tif (!empty($source) && $source instanceof modMediaSource && !empty($row[\'image\'])) {\\n\\t\\t$row[\'image\'] = $source->getObjectUrl($row[\'image\']);\\n\\t}\\n\\n\\t$row[\'idx\'] = $pdoFetch->idx++;\\n\\t$tpl = $pdoFetch->defineChunk($row);\\n\\tif (!empty($additionalPlaceholders)) {\\n\\t\\t$row = array_merge($additionalPlaceholders, $row);\\n\\t}\\n\\n\\t$output[] = !empty($tpl)\\n\\t\\t? $pdoFetch->getChunk($tpl, $row, $pdoFetch->config[\'fastMode\'])\\n\\t\\t: \'<pre>\'.$pdoFetch->getChunk(\'\', $row).\'<\\/pre>\';\\n}\\n\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t$output[\'log\'] = \'<pre class=\\"pdoUsersLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\n\\/\\/ Return output\\nif (!empty($toSeparatePlaceholders)) {\\n\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n}\\nelse {\\n\\t$output = implode($outputSeparator, $output);\\n\\n\\tif (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\n\\t\\t$output = $pdoFetch->getChunk($tplWrapper, array(\'output\' => $output), $pdoFetch->config[\'fastMode\']);\\n\\t}\\n\\n\\tif (!empty($toPlaceholder)) {\\n\\t\\t$modx->setPlaceholder($toPlaceholder, $output);\\n\\t}\\n\\telse {\\n\\t\\treturn $output;\\n\\t}\\n}"}',
);