<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'a01c8eeee160d0e6b571c5990407a265',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '000fd101ab8856704e6c1bab7b6caae9',
  'native_key' => 45,
  'object' => '{"id":45,"source":1,"property_preprocess":0,"name":"msOrder","description":"","editor_type":0,"category":11,"cache_type":0,"snippet":"\\/** @var modX $modx *\\/\\r\\n\\/** @var array $scriptProperties *\\/\\r\\n\\/** @var miniShop2 $miniShop2 *\\/\\r\\n$miniShop2 = $modx->getService(\'miniShop2\');\\r\\n$miniShop2->initialize($modx->context->key);\\r\\n\\/** @var pdoFetch $pdoFetch *\\/\\r\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\r\\n    return false;\\r\\n}\\r\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\r\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\r\\n\\r\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.msOrder\');\\r\\n\\r\\n\\/\\/ Do not show order form when displaying details of existing order\\r\\nif (!empty($_GET[\'msorder\'])) {\\r\\n    return \'\';\\r\\n}\\r\\n\\r\\n$cart = $miniShop2->cart->get();\\r\\n$order = $miniShop2->order->get();\\r\\n$status = $miniShop2->cart->status();\\r\\nif (empty($status[\'total_count\'])) {\\r\\n    return \'\';\\r\\n}\\r\\n$cost = $miniShop2->order->getCost();\\r\\n$order[\'cost\'] = $miniShop2->formatPrice($cost[\'data\'][\'cost\']);\\r\\n\\r\\n\\/\\/ We need only active methods\\r\\n$where = array(\\r\\n    \'msDelivery.active\' => true,\\r\\n    \'msPayment.active\' => true,\\r\\n);\\r\\n\\r\\n\\/\\/ Join payments to deliveries\\r\\n$leftJoin = array(\\r\\n    \'Payments\' => array(\\r\\n        \'class\' => \'msDeliveryMember\',\\r\\n    ),\\r\\n    \'msPayment\' => array(\\r\\n        \'class\' => \'msPayment\',\\r\\n        \'on\' => \'Payments.payment_id = msPayment.id\',\\r\\n    ),\\r\\n);\\r\\n\\r\\n\\/\\/ Select columns\\r\\n$select = array(\\r\\n    \'msDelivery\' => $modx->getSelectColumns(\'msDelivery\', \'msDelivery\', \'delivery_\'),\\r\\n    \'msPayment\' => $modx->getSelectColumns(\'msPayment\', \'msPayment\', \'payment_\'),\\r\\n);\\r\\n\\r\\n\\/\\/ Add user parameters\\r\\nforeach (array(\'where\', \'leftJoin\', \'select\') as $v) {\\r\\n    if (!empty($scriptProperties[$v])) {\\r\\n        $tmp = $scriptProperties[$v];\\r\\n        if (!is_array($tmp)) {\\r\\n            $tmp = json_decode($tmp, true);\\r\\n        }\\r\\n        if (is_array($tmp)) {\\r\\n            $$v = array_merge($$v, $tmp);\\r\\n        }\\r\\n    }\\r\\n    unset($scriptProperties[$v]);\\r\\n}\\r\\n$pdoFetch->addTime(\'Conditions prepared\');\\r\\n\\r\\n\\/\\/ Default parameters\\r\\n$default = array(\\r\\n    \'class\' => \'msDelivery\',\\r\\n    \'where\' => $where,\\r\\n    \'leftJoin\' => $leftJoin,\\r\\n    \'select\' => $select,\\r\\n    \'sortby\' => \'msDelivery.rank asc, msPayment.rank\',\\r\\n    \'sortdir\' => \'asc\',\\r\\n    \'limit\' => 0,\\r\\n    \'return\' => \'data\',\\r\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\r\\n);\\r\\n\\/\\/ Merge all properties and run!\\r\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\r\\n$rows = $pdoFetch->run();\\r\\n\\r\\n$deliveries = $payments = array();\\r\\nforeach ($rows as $row) {\\r\\n    $delivery = array();\\r\\n    $payment = array();\\r\\n    foreach ($row as $key => $value) {\\r\\n        if (strpos($key, \'delivery_\') === 0) {\\r\\n            $delivery[substr($key, 9)] = $value;\\r\\n        } else {\\r\\n            $payment[substr($key, 8)] = $value;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (!isset($deliveries[$delivery[\'id\']])) {\\r\\n        $delivery[\'payments\'] = array();\\r\\n        $deliveries[$delivery[\'id\']] = $delivery;\\r\\n    }\\r\\n    if (!empty($payment[\'id\'])) {\\r\\n        $deliveries[$delivery[\'id\']][\'payments\'][] = (int)$payment[\'id\'];\\r\\n        if (!isset($payments[$payment[\'id\']])) {\\r\\n            $payments[$payment[\'id\']] = $payment;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n$form = array();\\r\\n\\/\\/ Get user data\\r\\n$profile = array();\\r\\nif ($modx->user->isAuthenticated($modx->context->key)) {\\r\\n    $profile = array_merge($modx->user->Profile->toArray(), $modx->user->toArray());\\r\\n}\\r\\n$fields = array(\\r\\n    \'receiver\' => \'fullname\',\\r\\n    \'phone\' => \'phone\',\\r\\n    \'email\' => \'email\',\\r\\n    \'comment\' => \'extended[comment]\',\\r\\n    \'index\' => \'zip\',\\r\\n    \'country\' => \'country\',\\r\\n    \'region\' => \'state\',\\r\\n    \'city\' => \'city\',\\r\\n    \'street\' => \'address\',\\r\\n    \'building\' => \'extended[building]\',\\r\\n    \'room\' => \'extended[room]\',\\r\\n);\\r\\n\\/\\/ Apply custom fields\\r\\nif (!empty($userFields)) {\\r\\n    if (!is_array($userFields)) {\\r\\n        $userFields = json_decode($userFields, true);\\r\\n    }\\r\\n    if (is_array($userFields)) {\\r\\n        $fields = array_merge($fields, $userFields);\\r\\n    }\\r\\n}\\r\\n\\/\\/ Set user fields\\r\\nforeach ($fields as $key => $value) {\\r\\n    if (!empty($profile) && !empty($value)) {\\r\\n        if (strpos($value, \'extended\') !== false) {\\r\\n            $tmp = substr($value, 9, -1);\\r\\n            $value = !empty($profile[\'extended\'][$tmp])\\r\\n                ? $profile[\'extended\'][$tmp]\\r\\n                : \'\';\\r\\n        } else {\\r\\n            $value = $profile[$value];\\r\\n        }\\r\\n        $response = $miniShop2->order->add($key, $value);\\r\\n        if ($response[\'success\'] && !empty($response[\'data\'][$key])) {\\r\\n            $form[$key] = $response[\'data\'][$key];\\r\\n        }\\r\\n    }\\r\\n    if (empty($form[$key]) && !empty($order[$key])) {\\r\\n        $form[$key] = $order[$key];\\r\\n        unset($order[$key]);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Check for errors\\r\\n$errors = array();\\r\\nif (!empty($_POST)) {\\r\\n    $response = $miniShop2->order->getDeliveryRequiresFields();\\r\\n    if ($requires = $response[\'data\'][\'requires\']) {\\r\\n        foreach ($_POST as $field => $val) {\\r\\n            $validated = $miniShop2->order->validate($field, $val);\\r\\n            if ((in_array($field, $requires) && empty($validated))) {\\r\\n                $errors[] = $field;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n$output = $pdoFetch->getChunk($tpl, array(\\r\\n    \'order\' => $order,\\r\\n    \'form\' => $form,\\r\\n    \'deliveries\' => $deliveries,\\r\\n    \'payments\' => $payments,\\r\\n    \'errors\' => $errors,\\r\\n));\\r\\n\\r\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\r\\n    $output .= \'<pre class=\\"msOrderLog\\">\' . print_r($pdoFetch->getTime(), true) . \'<\\/pre>\';\\r\\n}\\r\\n\\r\\nreturn $output;","locked":0,"properties":"a:3:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:12:\\"ms2_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:11:\\"tpl.msOrder\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"userFields\\";a:7:{s:4:\\"name\\";s:10:\\"userFields\\";s:4:\\"desc\\";s:19:\\"ms2_prop_userFields\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:16:\\"ms2_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/minishop2\\/elements\\/snippets\\/snippet.ms_order.php","content":"\\/** @var modX $modx *\\/\\r\\n\\/** @var array $scriptProperties *\\/\\r\\n\\/** @var miniShop2 $miniShop2 *\\/\\r\\n$miniShop2 = $modx->getService(\'miniShop2\');\\r\\n$miniShop2->initialize($modx->context->key);\\r\\n\\/** @var pdoFetch $pdoFetch *\\/\\r\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\r\\n    return false;\\r\\n}\\r\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\r\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\r\\n\\r\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.msOrder\');\\r\\n\\r\\n\\/\\/ Do not show order form when displaying details of existing order\\r\\nif (!empty($_GET[\'msorder\'])) {\\r\\n    return \'\';\\r\\n}\\r\\n\\r\\n$cart = $miniShop2->cart->get();\\r\\n$order = $miniShop2->order->get();\\r\\n$status = $miniShop2->cart->status();\\r\\nif (empty($status[\'total_count\'])) {\\r\\n    return \'\';\\r\\n}\\r\\n$cost = $miniShop2->order->getCost();\\r\\n$order[\'cost\'] = $miniShop2->formatPrice($cost[\'data\'][\'cost\']);\\r\\n\\r\\n\\/\\/ We need only active methods\\r\\n$where = array(\\r\\n    \'msDelivery.active\' => true,\\r\\n    \'msPayment.active\' => true,\\r\\n);\\r\\n\\r\\n\\/\\/ Join payments to deliveries\\r\\n$leftJoin = array(\\r\\n    \'Payments\' => array(\\r\\n        \'class\' => \'msDeliveryMember\',\\r\\n    ),\\r\\n    \'msPayment\' => array(\\r\\n        \'class\' => \'msPayment\',\\r\\n        \'on\' => \'Payments.payment_id = msPayment.id\',\\r\\n    ),\\r\\n);\\r\\n\\r\\n\\/\\/ Select columns\\r\\n$select = array(\\r\\n    \'msDelivery\' => $modx->getSelectColumns(\'msDelivery\', \'msDelivery\', \'delivery_\'),\\r\\n    \'msPayment\' => $modx->getSelectColumns(\'msPayment\', \'msPayment\', \'payment_\'),\\r\\n);\\r\\n\\r\\n\\/\\/ Add user parameters\\r\\nforeach (array(\'where\', \'leftJoin\', \'select\') as $v) {\\r\\n    if (!empty($scriptProperties[$v])) {\\r\\n        $tmp = $scriptProperties[$v];\\r\\n        if (!is_array($tmp)) {\\r\\n            $tmp = json_decode($tmp, true);\\r\\n        }\\r\\n        if (is_array($tmp)) {\\r\\n            $$v = array_merge($$v, $tmp);\\r\\n        }\\r\\n    }\\r\\n    unset($scriptProperties[$v]);\\r\\n}\\r\\n$pdoFetch->addTime(\'Conditions prepared\');\\r\\n\\r\\n\\/\\/ Default parameters\\r\\n$default = array(\\r\\n    \'class\' => \'msDelivery\',\\r\\n    \'where\' => $where,\\r\\n    \'leftJoin\' => $leftJoin,\\r\\n    \'select\' => $select,\\r\\n    \'sortby\' => \'msDelivery.rank asc, msPayment.rank\',\\r\\n    \'sortdir\' => \'asc\',\\r\\n    \'limit\' => 0,\\r\\n    \'return\' => \'data\',\\r\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\r\\n);\\r\\n\\/\\/ Merge all properties and run!\\r\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\r\\n$rows = $pdoFetch->run();\\r\\n\\r\\n$deliveries = $payments = array();\\r\\nforeach ($rows as $row) {\\r\\n    $delivery = array();\\r\\n    $payment = array();\\r\\n    foreach ($row as $key => $value) {\\r\\n        if (strpos($key, \'delivery_\') === 0) {\\r\\n            $delivery[substr($key, 9)] = $value;\\r\\n        } else {\\r\\n            $payment[substr($key, 8)] = $value;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    if (!isset($deliveries[$delivery[\'id\']])) {\\r\\n        $delivery[\'payments\'] = array();\\r\\n        $deliveries[$delivery[\'id\']] = $delivery;\\r\\n    }\\r\\n    if (!empty($payment[\'id\'])) {\\r\\n        $deliveries[$delivery[\'id\']][\'payments\'][] = (int)$payment[\'id\'];\\r\\n        if (!isset($payments[$payment[\'id\']])) {\\r\\n            $payments[$payment[\'id\']] = $payment;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n$form = array();\\r\\n\\/\\/ Get user data\\r\\n$profile = array();\\r\\nif ($modx->user->isAuthenticated($modx->context->key)) {\\r\\n    $profile = array_merge($modx->user->Profile->toArray(), $modx->user->toArray());\\r\\n}\\r\\n$fields = array(\\r\\n    \'receiver\' => \'fullname\',\\r\\n    \'phone\' => \'phone\',\\r\\n    \'email\' => \'email\',\\r\\n    \'comment\' => \'extended[comment]\',\\r\\n    \'index\' => \'zip\',\\r\\n    \'country\' => \'country\',\\r\\n    \'region\' => \'state\',\\r\\n    \'city\' => \'city\',\\r\\n    \'street\' => \'address\',\\r\\n    \'building\' => \'extended[building]\',\\r\\n    \'room\' => \'extended[room]\',\\r\\n);\\r\\n\\/\\/ Apply custom fields\\r\\nif (!empty($userFields)) {\\r\\n    if (!is_array($userFields)) {\\r\\n        $userFields = json_decode($userFields, true);\\r\\n    }\\r\\n    if (is_array($userFields)) {\\r\\n        $fields = array_merge($fields, $userFields);\\r\\n    }\\r\\n}\\r\\n\\/\\/ Set user fields\\r\\nforeach ($fields as $key => $value) {\\r\\n    if (!empty($profile) && !empty($value)) {\\r\\n        if (strpos($value, \'extended\') !== false) {\\r\\n            $tmp = substr($value, 9, -1);\\r\\n            $value = !empty($profile[\'extended\'][$tmp])\\r\\n                ? $profile[\'extended\'][$tmp]\\r\\n                : \'\';\\r\\n        } else {\\r\\n            $value = $profile[$value];\\r\\n        }\\r\\n        $response = $miniShop2->order->add($key, $value);\\r\\n        if ($response[\'success\'] && !empty($response[\'data\'][$key])) {\\r\\n            $form[$key] = $response[\'data\'][$key];\\r\\n        }\\r\\n    }\\r\\n    if (empty($form[$key]) && !empty($order[$key])) {\\r\\n        $form[$key] = $order[$key];\\r\\n        unset($order[$key]);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Check for errors\\r\\n$errors = array();\\r\\nif (!empty($_POST)) {\\r\\n    $response = $miniShop2->order->getDeliveryRequiresFields();\\r\\n    if ($requires = $response[\'data\'][\'requires\']) {\\r\\n        foreach ($_POST as $field => $val) {\\r\\n            $validated = $miniShop2->order->validate($field, $val);\\r\\n            if ((in_array($field, $requires) && empty($validated))) {\\r\\n                $errors[] = $field;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n$output = $pdoFetch->getChunk($tpl, array(\\r\\n    \'order\' => $order,\\r\\n    \'form\' => $form,\\r\\n    \'deliveries\' => $deliveries,\\r\\n    \'payments\' => $payments,\\r\\n    \'errors\' => $errors,\\r\\n));\\r\\n\\r\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\r\\n    $output .= \'<pre class=\\"msOrderLog\\">\' . print_r($pdoFetch->getTime(), true) . \'<\\/pre>\';\\r\\n}\\r\\n\\r\\nreturn $output;"}',
);