<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'd0640c68fd1e8276ba2669580ff09480',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '26366ddb733ce859766cbf0a9fdaad84',
  'native_key' => 43,
  'object' => '{"id":43,"source":1,"property_preprocess":0,"name":"msGallery","description":"","editor_type":0,"category":11,"cache_type":0,"snippet":"\\/** @var modX $modx *\\/\\r\\n\\/** @var array $scriptProperties *\\/\\r\\n\\/** @var miniShop2 $miniShop2 *\\/\\r\\n$miniShop2 = $modx->getService(\'miniShop2\');\\r\\n$miniShop2->initialize($modx->context->key);\\r\\n\\/** @var pdoFetch $pdoFetch *\\/\\r\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\r\\n    return false;\\r\\n}\\r\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\r\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\r\\n\\r\\n$extensionsDir = $modx->getOption(\'extensionsDir\', $scriptProperties, \'components\\/minishop2\\/img\\/mgr\\/extensions\\/\', true);\\r\\n$limit = $modx->getOption(\'limit\', $scriptProperties, 0);\\r\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.msGallery\');\\r\\n\\r\\n\\/** @var msProduct $product *\\/\\r\\n$product = !empty($product) && $product != $modx->resource->id\\r\\n    ? $modx->getObject(\'msProduct\', $product)\\r\\n    : $modx->resource;\\r\\nif (!$product || !($product instanceof msProduct)) {\\r\\n    return \\"[msGallery] The resource with id = {$product->id} is not instance of msProduct.\\";\\r\\n}\\r\\n\\r\\n$where = array(\\r\\n    \'product_id\' => $product->id,\\r\\n    \'parent\' => 0,\\r\\n);\\r\\nif (!empty($filetype)) {\\r\\n    $where[\'type:IN\'] = array_map(\'trim\', explode(\',\', $filetype));\\r\\n}\\r\\nif (empty($showInactive)) {\\r\\n    $where[\'active\'] = 1;\\r\\n}\\r\\n$select = array(\\r\\n    \'msProductFile\' => \'*\',\\r\\n);\\r\\n\\r\\n\\/\\/ Add user parameters\\r\\nforeach (array(\'where\') as $v) {\\r\\n    if (!empty($scriptProperties[$v])) {\\r\\n        $tmp = $scriptProperties[$v];\\r\\n        if (!is_array($tmp)) {\\r\\n            $tmp = json_decode($tmp, true);\\r\\n        }\\r\\n        if (is_array($tmp)) {\\r\\n            $$v = array_merge($$v, $tmp);\\r\\n        }\\r\\n    }\\r\\n    unset($scriptProperties[$v]);\\r\\n}\\r\\n$pdoFetch->addTime(\'Conditions prepared\');\\r\\n\\r\\n$default = array(\\r\\n    \'class\' => \'msProductFile\',\\r\\n    \'where\' => $where,\\r\\n    \'select\' => $select,\\r\\n    \'limit\' => $limit,\\r\\n    \'sortby\' => \'rank\',\\r\\n    \'sortdir\' => \'ASC\',\\r\\n    \'fastMode\' => false,\\r\\n    \'return\' => \'data\',\\r\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\r\\n);\\r\\n\\/\\/ Merge all properties and run!\\r\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\r\\n$rows = $pdoFetch->run();\\r\\n\\r\\n$pdoFetch->addTime(\'Fetching thumbnails\');\\r\\n\\r\\n$resolution = array();\\r\\n\\/** @var msProductData $data *\\/\\r\\nif ($data = $product->getOne(\'Data\')) {\\r\\n    if ($data->initializeMediaSource()) {\\r\\n        $properties = $data->mediaSource->getProperties();\\r\\n        if (isset($properties[\'thumbnails\'][\'value\'])) {\\r\\n            $fileTypes = json_decode($properties[\'thumbnails\'][\'value\'], true);\\r\\n            foreach ($fileTypes as $k => $v) {\\r\\n                if (!is_numeric($k)) {\\r\\n                    $resolution[] = $k;\\r\\n                } elseif (!empty($v[\'name\'])) {\\r\\n                    $resolution[] = $v[\'name\'];\\r\\n                } else {\\r\\n                    $resolution[] = @$v[\'w\'] . \'x\' . @$v[\'h\'];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Processing rows\\r\\n$files = array();\\r\\nforeach ($rows as $row) {\\r\\n    if (isset($row[\'type\']) && $row[\'type\'] == \'image\') {\\r\\n        $c = $modx->newQuery(\'msProductFile\', array(\'parent\' => $row[\'id\']));\\r\\n        $c->select(\'product_id,url\');\\r\\n        $tstart = microtime(true);\\r\\n        if ($c->prepare() && $c->stmt->execute()) {\\r\\n            $modx->queryTime += microtime(true) - $tstart;\\r\\n            $modx->executedQueries++;\\r\\n            while ($tmp = $c->stmt->fetch(PDO::FETCH_ASSOC)) {\\r\\n                if (preg_match(\\"#\\/{$tmp[\'product_id\']}\\/(.*?)\\/#\\", $tmp[\'url\'], $size)) {\\r\\n                    $row[$size[1]] = $tmp[\'url\'];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    } elseif (isset($row[\'type\'])) {\\r\\n        $row[\'thumbnail\'] =\\r\\n        $row[\'url\'] = file_exists(MODX_ASSETS_PATH . $extensionsDir . $row[\'type\'] . \'.png\')\\r\\n            ? MODX_ASSETS_URL . $extensionsDir . $row[\'type\'] . \'.png\'\\r\\n            : MODX_ASSETS_URL . $extensionsDir . \'other.png\';\\r\\n        foreach ($resolution as $v) {\\r\\n            $row[$v] = $row[\'thumbnail\'];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    $files[] = $row;\\r\\n}\\r\\n\\r\\n$output = $pdoFetch->getChunk($tpl, array(\\r\\n    \'files\' => $files,\\r\\n));\\r\\n\\r\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\r\\n    $output .= \'<pre class=\\"msGalleryLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\r\\n}\\r\\n\\r\\nif (!empty($toPlaceholder)) {\\r\\n    $modx->setPlaceholder($toPlaceholder, $output);\\r\\n} else {\\r\\n    return $output;\\r\\n}","locked":0,"properties":"a:10:{s:7:\\"product\\";a:7:{s:4:\\"name\\";s:7:\\"product\\";s:4:\\"desc\\";s:16:\\"ms2_prop_product\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:12:\\"ms2_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:13:\\"tpl.msGallery\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:14:\\"ms2_prop_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:15:\\"ms2_prop_offset\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:15:\\"ms2_prop_sortby\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:16:\\"ms2_prop_sortdir\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:22:\\"ms2_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:16:\\"ms2_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:14:\\"ms2_prop_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"filetype\\";a:7:{s:4:\\"name\\";s:8:\\"filetype\\";s:4:\\"desc\\";s:17:\\"ms2_prop_filetype\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/minishop2\\/elements\\/snippets\\/snippet.ms_gallery.php","content":"\\/** @var modX $modx *\\/\\r\\n\\/** @var array $scriptProperties *\\/\\r\\n\\/** @var miniShop2 $miniShop2 *\\/\\r\\n$miniShop2 = $modx->getService(\'miniShop2\');\\r\\n$miniShop2->initialize($modx->context->key);\\r\\n\\/** @var pdoFetch $pdoFetch *\\/\\r\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\r\\n    return false;\\r\\n}\\r\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\r\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\r\\n\\r\\n$extensionsDir = $modx->getOption(\'extensionsDir\', $scriptProperties, \'components\\/minishop2\\/img\\/mgr\\/extensions\\/\', true);\\r\\n$limit = $modx->getOption(\'limit\', $scriptProperties, 0);\\r\\n$tpl = $modx->getOption(\'tpl\', $scriptProperties, \'tpl.msGallery\');\\r\\n\\r\\n\\/** @var msProduct $product *\\/\\r\\n$product = !empty($product) && $product != $modx->resource->id\\r\\n    ? $modx->getObject(\'msProduct\', $product)\\r\\n    : $modx->resource;\\r\\nif (!$product || !($product instanceof msProduct)) {\\r\\n    return \\"[msGallery] The resource with id = {$product->id} is not instance of msProduct.\\";\\r\\n}\\r\\n\\r\\n$where = array(\\r\\n    \'product_id\' => $product->id,\\r\\n    \'parent\' => 0,\\r\\n);\\r\\nif (!empty($filetype)) {\\r\\n    $where[\'type:IN\'] = array_map(\'trim\', explode(\',\', $filetype));\\r\\n}\\r\\nif (empty($showInactive)) {\\r\\n    $where[\'active\'] = 1;\\r\\n}\\r\\n$select = array(\\r\\n    \'msProductFile\' => \'*\',\\r\\n);\\r\\n\\r\\n\\/\\/ Add user parameters\\r\\nforeach (array(\'where\') as $v) {\\r\\n    if (!empty($scriptProperties[$v])) {\\r\\n        $tmp = $scriptProperties[$v];\\r\\n        if (!is_array($tmp)) {\\r\\n            $tmp = json_decode($tmp, true);\\r\\n        }\\r\\n        if (is_array($tmp)) {\\r\\n            $$v = array_merge($$v, $tmp);\\r\\n        }\\r\\n    }\\r\\n    unset($scriptProperties[$v]);\\r\\n}\\r\\n$pdoFetch->addTime(\'Conditions prepared\');\\r\\n\\r\\n$default = array(\\r\\n    \'class\' => \'msProductFile\',\\r\\n    \'where\' => $where,\\r\\n    \'select\' => $select,\\r\\n    \'limit\' => $limit,\\r\\n    \'sortby\' => \'rank\',\\r\\n    \'sortdir\' => \'ASC\',\\r\\n    \'fastMode\' => false,\\r\\n    \'return\' => \'data\',\\r\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\r\\n);\\r\\n\\/\\/ Merge all properties and run!\\r\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\r\\n$rows = $pdoFetch->run();\\r\\n\\r\\n$pdoFetch->addTime(\'Fetching thumbnails\');\\r\\n\\r\\n$resolution = array();\\r\\n\\/** @var msProductData $data *\\/\\r\\nif ($data = $product->getOne(\'Data\')) {\\r\\n    if ($data->initializeMediaSource()) {\\r\\n        $properties = $data->mediaSource->getProperties();\\r\\n        if (isset($properties[\'thumbnails\'][\'value\'])) {\\r\\n            $fileTypes = json_decode($properties[\'thumbnails\'][\'value\'], true);\\r\\n            foreach ($fileTypes as $k => $v) {\\r\\n                if (!is_numeric($k)) {\\r\\n                    $resolution[] = $k;\\r\\n                } elseif (!empty($v[\'name\'])) {\\r\\n                    $resolution[] = $v[\'name\'];\\r\\n                } else {\\r\\n                    $resolution[] = @$v[\'w\'] . \'x\' . @$v[\'h\'];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Processing rows\\r\\n$files = array();\\r\\nforeach ($rows as $row) {\\r\\n    if (isset($row[\'type\']) && $row[\'type\'] == \'image\') {\\r\\n        $c = $modx->newQuery(\'msProductFile\', array(\'parent\' => $row[\'id\']));\\r\\n        $c->select(\'product_id,url\');\\r\\n        $tstart = microtime(true);\\r\\n        if ($c->prepare() && $c->stmt->execute()) {\\r\\n            $modx->queryTime += microtime(true) - $tstart;\\r\\n            $modx->executedQueries++;\\r\\n            while ($tmp = $c->stmt->fetch(PDO::FETCH_ASSOC)) {\\r\\n                if (preg_match(\\"#\\/{$tmp[\'product_id\']}\\/(.*?)\\/#\\", $tmp[\'url\'], $size)) {\\r\\n                    $row[$size[1]] = $tmp[\'url\'];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    } elseif (isset($row[\'type\'])) {\\r\\n        $row[\'thumbnail\'] =\\r\\n        $row[\'url\'] = file_exists(MODX_ASSETS_PATH . $extensionsDir . $row[\'type\'] . \'.png\')\\r\\n            ? MODX_ASSETS_URL . $extensionsDir . $row[\'type\'] . \'.png\'\\r\\n            : MODX_ASSETS_URL . $extensionsDir . \'other.png\';\\r\\n        foreach ($resolution as $v) {\\r\\n            $row[$v] = $row[\'thumbnail\'];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    $files[] = $row;\\r\\n}\\r\\n\\r\\n$output = $pdoFetch->getChunk($tpl, array(\\r\\n    \'files\' => $files,\\r\\n));\\r\\n\\r\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\r\\n    $output .= \'<pre class=\\"msGalleryLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\r\\n}\\r\\n\\r\\nif (!empty($toPlaceholder)) {\\r\\n    $modx->setPlaceholder($toPlaceholder, $output);\\r\\n} else {\\r\\n    return $output;\\r\\n}"}',
);