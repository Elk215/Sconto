<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'f7f891132000c72591b2e34b51d5291f',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => 'b9df59b00f0b32c5208f16be3ea673ab',
  'native_key' => 40,
  'object' => '{"id":40,"source":1,"property_preprocess":0,"name":"msProducts","description":"","editor_type":0,"category":11,"cache_type":0,"snippet":"\\/** @var modX $modx *\\/\\r\\n\\/** @var array $scriptProperties *\\/\\r\\n\\/** @var miniShop2 $miniShop2 *\\/\\r\\n$miniShop2 = $modx->getService(\'miniShop2\');\\r\\n$miniShop2->initialize($modx->context->key);\\r\\n\\/** @var pdoFetch $pdoFetch *\\/\\r\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\r\\n    return false;\\r\\n}\\r\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\r\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\r\\n\\r\\nif (isset($parents) && $parents === \'\') {\\r\\n    $scriptProperties[\'parents\'] = $modx->resource->id;\\r\\n}\\r\\n\\r\\n\\/\\/ Start build \\"where\\" expression\\r\\n$where = array(\\r\\n    \'class_key\' => \'msProduct\',\\r\\n);\\r\\nif (empty($showZeroPrice)) {\\r\\n    $where[\'Data.price:>\'] = 0;\\r\\n}\\r\\n\\/\\/ Add grouping\\r\\n$groupby = array(\\r\\n    \'msProduct.id\',\\r\\n);\\r\\n\\r\\n\\/\\/ Join tables\\r\\n$leftJoin = array(\\r\\n    \'Data\' => array(\'class\' => \'msProductData\'),\\r\\n    \'Vendor\' => array(\'class\' => \'msVendor\', \'on\' => \'Data.vendor=Vendor.id\'),\\r\\n);\\r\\n\\r\\n$select = array(\\r\\n    \'msProduct\' => !empty($includeContent)\\r\\n        ? $modx->getSelectColumns(\'msProduct\', \'msProduct\')\\r\\n        : $modx->getSelectColumns(\'msProduct\', \'msProduct\', \'\', array(\'content\'), true),\\r\\n    \'Data\' => $modx->getSelectColumns(\'msProductData\', \'Data\', \'\', array(\'id\'), true),\\r\\n    \'Vendor\' => $modx->getSelectColumns(\'msVendor\', \'Vendor\', \'vendor.\', array(\'id\'), true),\\r\\n);\\r\\n\\r\\n\\/\\/ Include thumbnails\\r\\nif (!empty($includeThumbs)) {\\r\\n    $thumbs = array_map(\'trim\', explode(\',\', $includeThumbs));\\r\\n    foreach ($thumbs as $thumb) {\\r\\n        if (empty($thumb)) {\\r\\n            continue;\\r\\n        }\\r\\n        $leftJoin[$thumb] = array(\\r\\n            \'class\' => \'msProductFile\',\\r\\n            \'on\' => \\"`{$thumb}`.product_id = msProduct.id AND `{$thumb}`.rank = 0 AND `{$thumb}`.path LIKE \'%\\/{$thumb}\\/%\'\\",\\r\\n        );\\r\\n        $select[$thumb] = \\"`{$thumb}`.url as `{$thumb}`\\";\\r\\n        $groupby[] = \\"`{$thumb}`.url\\";\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Include linked products\\r\\n$innerJoin = array();\\r\\nif (!empty($link) && !empty($master)) {\\r\\n    $innerJoin[\'Link\'] = array(\\r\\n        \'class\' => \'msProductLink\',\\r\\n        \'on\' => \'msProduct.id = Link.slave AND Link.link = \' . $link,\\r\\n    );\\r\\n    $where[\'Link.master\'] = $master;\\r\\n} elseif (!empty($link) && !empty($slave)) {\\r\\n    $innerJoin[\'Link\'] = array(\\r\\n        \'class\' => \'msProductLink\',\\r\\n        \'on\' => \'msProduct.id = Link.master AND Link.link = \' . $link,\\r\\n    );\\r\\n    $where[\'Link.slave\'] = $slave;\\r\\n}\\r\\n\\r\\n\\/\\/ Add user parameters\\r\\nforeach (array(\'where\', \'leftJoin\', \'innerJoin\', \'select\', \'groupby\') as $v) {\\r\\n    if (!empty($scriptProperties[$v])) {\\r\\n        $tmp = $scriptProperties[$v];\\r\\n        if (!is_array($tmp)) {\\r\\n            $tmp = json_decode($tmp, true);\\r\\n        }\\r\\n        if (is_array($tmp)) {\\r\\n            $$v = array_merge($$v, $tmp);\\r\\n        }\\r\\n    }\\r\\n    unset($scriptProperties[$v]);\\r\\n}\\r\\n$pdoFetch->addTime(\'Conditions prepared\');\\r\\n\\r\\n\\/\\/ Add filters by options\\r\\n$joinedOptions = array();\\r\\nif (!empty($scriptProperties[\'optionFilters\'])) {\\r\\n    $filters = json_decode($scriptProperties[\'optionFilters\'], true);\\r\\n    foreach ($filters as $key => $value) {\\r\\n        $option = preg_replace(\'#\\\\:.*#\', \'\', $key);\\r\\n        $key = str_replace($option, $option . \'.value\', $key);\\r\\n        if (!in_array($option, $joinedOptions)) {\\r\\n            $leftJoin[$option] = array(\\r\\n                \'class\' => \'msProductOption\',\\r\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\r\\n            );\\r\\n            $joinedOptions[] = $option;\\r\\n            $where[$key] = $value;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Add sort by options\\r\\nif (!empty($scriptProperties[\'sortbyOptions\'])) {\\r\\n    $sorts = array_map(\'trim\', explode(\',\', $scriptProperties[\'sortbyOptions\']));\\r\\n    foreach ($sorts as $sort) {\\r\\n        $sort = explode(\':\', $sort);\\r\\n        $option = $sort[0];\\r\\n        if (preg_match(\\"#\\\\b{$option}\\\\b#\\", $scriptProperties[\'sortby\'], $matches)) {\\r\\n            $type = \'string\';\\r\\n            if (isset($sort[1])) {\\r\\n                $type = $sort[1];\\r\\n            }\\r\\n            switch ($type) {\\r\\n                case \'number\':\\r\\n                case \'decimal\':\\r\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DECIMAL(13,3))\\";\\r\\n                    break;\\r\\n                case \'int\':\\r\\n                case \'integer\':\\r\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS UNSIGNED INTEGER)\\";\\r\\n                    break;\\r\\n                case \'date\':\\r\\n                case \'datetime\':\\r\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DATETIME)\\";\\r\\n                    break;\\r\\n                default:\\r\\n                    $sortbyOptions = \\"`{$option}`.`value`\\";\\r\\n                    break;\\r\\n            }\\r\\n            $scriptProperties[\'sortby\'] = preg_replace(\\"#\\\\b{$option}\\\\b#\\", $sortbyOptions, $scriptProperties[\'sortby\']);\\r\\n            $groupby[] = \\"`{$option}`.value\\";\\r\\n        }\\r\\n\\r\\n        if (!in_array($option, $joinedOptions)) {\\r\\n            $leftJoin[$option] = array(\\r\\n                \'class\' => \'msProductOption\',\\r\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\r\\n            );\\r\\n            $joinedOptions[] = $option;\\r\\n        }\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n$default = array(\\r\\n    \'class\' => \'msProduct\',\\r\\n    \'where\' => $where,\\r\\n    \'leftJoin\' => $leftJoin,\\r\\n    \'innerJoin\' => $innerJoin,\\r\\n    \'select\' => $select,\\r\\n    \'sortby\' => \'msProduct.id\',\\r\\n    \'sortdir\' => \'ASC\',\\r\\n    \'groupby\' => implode(\', \', $groupby),\\r\\n    \'return\' => !empty($returnIds)\\r\\n        ? \'ids\'\\r\\n        : \'data\',\\r\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\r\\n);\\r\\n\\/\\/ Merge all properties and run!\\r\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\r\\n$rows = $pdoFetch->run();\\r\\n\\r\\n\\/\\/ Process rows\\r\\n$output = array();\\r\\nif (!empty($rows) && is_array($rows)) {\\r\\n    $c = $modx->newQuery(\'modPluginEvent\', array(\'event:IN\' => array(\'msOnGetProductPrice\', \'msOnGetProductWeight\')));\\r\\n    $c->innerJoin(\'modPlugin\', \'modPlugin\', \'modPlugin.id = modPluginEvent.pluginid\');\\r\\n    $c->where(\'modPlugin.disabled = 0\');\\r\\n\\r\\n    $modifications = $modx->getOption(\'ms2_price_snippet\', null, false, true) ||\\r\\n        $modx->getOption(\'ms2_weight_snippet\', null, false, true) || $modx->getCount(\'modPluginEvent\', $c);\\r\\n    if ($modifications) {\\r\\n        \\/** @var msProductData $product *\\/\\r\\n        $product = $modx->newObject(\'msProductData\');\\r\\n    }\\r\\n    $pdoFetch->addTime(\'Checked the active modifiers\');\\r\\n\\r\\n    $opt_time = 0;\\r\\n    foreach ($rows as $k => $row) {\\r\\n        if ($modifications) {\\r\\n            $product->fromArray($row, \'\', true, true);\\r\\n            $tmp = $row[\'price\'];\\r\\n            $row[\'price\'] = $product->getPrice($row);\\r\\n            $row[\'weight\'] = $product->getWeight($row);\\r\\n            \\/\\/ A discount here, so we should replace old price\\r\\n            if ($row[\'price\'] < $tmp) {\\r\\n                $row[\'old_price\'] = $tmp;\\r\\n            }\\r\\n        }\\r\\n        $row[\'price\'] = $miniShop2->formatPrice($row[\'price\']);\\r\\n        $row[\'old_price\'] = $miniShop2->formatPrice($row[\'old_price\']);\\r\\n        $row[\'weight\'] = $miniShop2->formatWeight($row[\'weight\']);\\r\\n        $row[\'idx\'] = $pdoFetch->idx++;\\r\\n\\r\\n        $opt_time_start = microtime(true);\\r\\n        $options = $modx->call(\'msProductData\', \'loadOptions\', array(&$modx, $row[\'id\']));\\r\\n        $row = array_merge($row, $options);\\r\\n        $opt_time += microtime(true) - $opt_time_start;\\r\\n\\r\\n        $tpl = $pdoFetch->defineChunk($row);\\r\\n        $output[] = $pdoFetch->getChunk($tpl, $row);\\r\\n    }\\r\\n    $pdoFetch->addTime(\'Time to load products options\', $opt_time);\\r\\n}\\r\\n\\r\\n$log = \'\';\\r\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\r\\n    $log .= \'<pre class=\\"msProductsLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\r\\n}\\r\\n\\r\\n\\/\\/ Return output\\r\\nif (!empty($returnIds) && is_string($rows)) {\\r\\n    $modx->setPlaceholder(\'msProducts.log\', $log);\\r\\n    if (!empty($toPlaceholder)) {\\r\\n        $modx->setPlaceholder($toPlaceholder, $rows);\\r\\n    } else {\\r\\n        return $rows;\\r\\n    }\\r\\n} elseif (!empty($toSeparatePlaceholders)) {\\r\\n    $output[\'log\'] = $log;\\r\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\r\\n} else {\\r\\n    if (empty($outputSeparator)) {\\r\\n        $outputSeparator = \\"\\\\n\\";\\r\\n    }\\r\\n    $output[\'log\'] = $log;\\r\\n    $output = implode($outputSeparator, $output);\\r\\n\\r\\n    if (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\r\\n        $output = $pdoFetch->getChunk($tplWrapper, array(\\r\\n            \'output\' => $output,\\r\\n        ));\\r\\n    }\\r\\n\\r\\n    if (!empty($toPlaceholder)) {\\r\\n        $modx->setPlaceholder($toPlaceholder, $output);\\r\\n    } else {\\r\\n        return $output;\\r\\n    }\\r\\n}","locked":0,"properties":"a:28:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:12:\\"ms2_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"tpl.msProducts.row\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:14:\\"ms2_prop_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:15:\\"ms2_prop_offset\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"depth\\";a:7:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:14:\\"ms2_prop_depth\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:15:\\"ms2_prop_sortby\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:2:\\"id\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"sortbyOptions\\";a:7:{s:4:\\"name\\";s:13:\\"sortbyOptions\\";s:4:\\"desc\\";s:22:\\"ms2_prop_sortbyOptions\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:16:\\"ms2_prop_sortdir\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:22:\\"ms2_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"toSeparatePlaceholders\\";a:7:{s:4:\\"name\\";s:22:\\"toSeparatePlaceholders\\";s:4:\\"desc\\";s:31:\\"ms2_prop_toSeparatePlaceholders\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:16:\\"ms2_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"parents\\";a:7:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:16:\\"ms2_prop_parents\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"resources\\";a:7:{s:4:\\"name\\";s:9:\\"resources\\";s:4:\\"desc\\";s:18:\\"ms2_prop_resources\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"includeContent\\";a:7:{s:4:\\"name\\";s:14:\\"includeContent\\";s:4:\\"desc\\";s:23:\\"ms2_prop_includeContent\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"includeTVs\\";a:7:{s:4:\\"name\\";s:10:\\"includeTVs\\";s:4:\\"desc\\";s:19:\\"ms2_prop_includeTVs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"includeThumbs\\";a:7:{s:4:\\"name\\";s:13:\\"includeThumbs\\";s:4:\\"desc\\";s:22:\\"ms2_prop_includeThumbs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"optionFilters\\";a:7:{s:4:\\"name\\";s:13:\\"optionFilters\\";s:4:\\"desc\\";s:22:\\"ms2_prop_optionFilters\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:14:\\"ms2_prop_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"link\\";a:7:{s:4:\\"name\\";s:4:\\"link\\";s:4:\\"desc\\";s:13:\\"ms2_prop_link\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"master\\";a:7:{s:4:\\"name\\";s:6:\\"master\\";s:4:\\"desc\\";s:15:\\"ms2_prop_master\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"slave\\";a:7:{s:4:\\"name\\";s:5:\\"slave\\";s:4:\\"desc\\";s:14:\\"ms2_prop_slave\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tvPrefix\\";a:7:{s:4:\\"name\\";s:8:\\"tvPrefix\\";s:4:\\"desc\\";s:17:\\"ms2_prop_tvPrefix\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"outputSeparator\\";a:7:{s:4:\\"name\\";s:15:\\"outputSeparator\\";s:4:\\"desc\\";s:24:\\"ms2_prop_outputSeparator\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\"\\n\\";s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"returnIds\\";a:7:{s:4:\\"name\\";s:9:\\"returnIds\\";s:4:\\"desc\\";s:18:\\"ms2_prop_returnIds\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"showUnpublished\\";a:7:{s:4:\\"name\\";s:15:\\"showUnpublished\\";s:4:\\"desc\\";s:24:\\"ms2_prop_showUnpublished\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"showDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"showDeleted\\";s:4:\\"desc\\";s:20:\\"ms2_prop_showDeleted\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:19:\\"ms2_prop_showHidden\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"showZeroPrice\\";a:7:{s:4:\\"name\\";s:13:\\"showZeroPrice\\";s:4:\\"desc\\";s:22:\\"ms2_prop_showZeroPrice\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"wrapIfEmpty\\";a:7:{s:4:\\"name\\";s:11:\\"wrapIfEmpty\\";s:4:\\"desc\\";s:20:\\"ms2_prop_wrapIfEmpty\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:20:\\"minishop2:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/minishop2\\/elements\\/snippets\\/snippet.ms_products.php","content":"\\/** @var modX $modx *\\/\\r\\n\\/** @var array $scriptProperties *\\/\\r\\n\\/** @var miniShop2 $miniShop2 *\\/\\r\\n$miniShop2 = $modx->getService(\'miniShop2\');\\r\\n$miniShop2->initialize($modx->context->key);\\r\\n\\/** @var pdoFetch $pdoFetch *\\/\\r\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\r\\n    return false;\\r\\n}\\r\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\r\\n$pdoFetch->addTime(\'pdoTools loaded.\');\\r\\n\\r\\nif (isset($parents) && $parents === \'\') {\\r\\n    $scriptProperties[\'parents\'] = $modx->resource->id;\\r\\n}\\r\\n\\r\\n\\/\\/ Start build \\"where\\" expression\\r\\n$where = array(\\r\\n    \'class_key\' => \'msProduct\',\\r\\n);\\r\\nif (empty($showZeroPrice)) {\\r\\n    $where[\'Data.price:>\'] = 0;\\r\\n}\\r\\n\\/\\/ Add grouping\\r\\n$groupby = array(\\r\\n    \'msProduct.id\',\\r\\n);\\r\\n\\r\\n\\/\\/ Join tables\\r\\n$leftJoin = array(\\r\\n    \'Data\' => array(\'class\' => \'msProductData\'),\\r\\n    \'Vendor\' => array(\'class\' => \'msVendor\', \'on\' => \'Data.vendor=Vendor.id\'),\\r\\n);\\r\\n\\r\\n$select = array(\\r\\n    \'msProduct\' => !empty($includeContent)\\r\\n        ? $modx->getSelectColumns(\'msProduct\', \'msProduct\')\\r\\n        : $modx->getSelectColumns(\'msProduct\', \'msProduct\', \'\', array(\'content\'), true),\\r\\n    \'Data\' => $modx->getSelectColumns(\'msProductData\', \'Data\', \'\', array(\'id\'), true),\\r\\n    \'Vendor\' => $modx->getSelectColumns(\'msVendor\', \'Vendor\', \'vendor.\', array(\'id\'), true),\\r\\n);\\r\\n\\r\\n\\/\\/ Include thumbnails\\r\\nif (!empty($includeThumbs)) {\\r\\n    $thumbs = array_map(\'trim\', explode(\',\', $includeThumbs));\\r\\n    foreach ($thumbs as $thumb) {\\r\\n        if (empty($thumb)) {\\r\\n            continue;\\r\\n        }\\r\\n        $leftJoin[$thumb] = array(\\r\\n            \'class\' => \'msProductFile\',\\r\\n            \'on\' => \\"`{$thumb}`.product_id = msProduct.id AND `{$thumb}`.rank = 0 AND `{$thumb}`.path LIKE \'%\\/{$thumb}\\/%\'\\",\\r\\n        );\\r\\n        $select[$thumb] = \\"`{$thumb}`.url as `{$thumb}`\\";\\r\\n        $groupby[] = \\"`{$thumb}`.url\\";\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Include linked products\\r\\n$innerJoin = array();\\r\\nif (!empty($link) && !empty($master)) {\\r\\n    $innerJoin[\'Link\'] = array(\\r\\n        \'class\' => \'msProductLink\',\\r\\n        \'on\' => \'msProduct.id = Link.slave AND Link.link = \' . $link,\\r\\n    );\\r\\n    $where[\'Link.master\'] = $master;\\r\\n} elseif (!empty($link) && !empty($slave)) {\\r\\n    $innerJoin[\'Link\'] = array(\\r\\n        \'class\' => \'msProductLink\',\\r\\n        \'on\' => \'msProduct.id = Link.master AND Link.link = \' . $link,\\r\\n    );\\r\\n    $where[\'Link.slave\'] = $slave;\\r\\n}\\r\\n\\r\\n\\/\\/ Add user parameters\\r\\nforeach (array(\'where\', \'leftJoin\', \'innerJoin\', \'select\', \'groupby\') as $v) {\\r\\n    if (!empty($scriptProperties[$v])) {\\r\\n        $tmp = $scriptProperties[$v];\\r\\n        if (!is_array($tmp)) {\\r\\n            $tmp = json_decode($tmp, true);\\r\\n        }\\r\\n        if (is_array($tmp)) {\\r\\n            $$v = array_merge($$v, $tmp);\\r\\n        }\\r\\n    }\\r\\n    unset($scriptProperties[$v]);\\r\\n}\\r\\n$pdoFetch->addTime(\'Conditions prepared\');\\r\\n\\r\\n\\/\\/ Add filters by options\\r\\n$joinedOptions = array();\\r\\nif (!empty($scriptProperties[\'optionFilters\'])) {\\r\\n    $filters = json_decode($scriptProperties[\'optionFilters\'], true);\\r\\n    foreach ($filters as $key => $value) {\\r\\n        $option = preg_replace(\'#\\\\:.*#\', \'\', $key);\\r\\n        $key = str_replace($option, $option . \'.value\', $key);\\r\\n        if (!in_array($option, $joinedOptions)) {\\r\\n            $leftJoin[$option] = array(\\r\\n                \'class\' => \'msProductOption\',\\r\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\r\\n            );\\r\\n            $joinedOptions[] = $option;\\r\\n            $where[$key] = $value;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\/\\/ Add sort by options\\r\\nif (!empty($scriptProperties[\'sortbyOptions\'])) {\\r\\n    $sorts = array_map(\'trim\', explode(\',\', $scriptProperties[\'sortbyOptions\']));\\r\\n    foreach ($sorts as $sort) {\\r\\n        $sort = explode(\':\', $sort);\\r\\n        $option = $sort[0];\\r\\n        if (preg_match(\\"#\\\\b{$option}\\\\b#\\", $scriptProperties[\'sortby\'], $matches)) {\\r\\n            $type = \'string\';\\r\\n            if (isset($sort[1])) {\\r\\n                $type = $sort[1];\\r\\n            }\\r\\n            switch ($type) {\\r\\n                case \'number\':\\r\\n                case \'decimal\':\\r\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DECIMAL(13,3))\\";\\r\\n                    break;\\r\\n                case \'int\':\\r\\n                case \'integer\':\\r\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS UNSIGNED INTEGER)\\";\\r\\n                    break;\\r\\n                case \'date\':\\r\\n                case \'datetime\':\\r\\n                    $sortbyOptions = \\"CAST(`{$option}`.`value` AS DATETIME)\\";\\r\\n                    break;\\r\\n                default:\\r\\n                    $sortbyOptions = \\"`{$option}`.`value`\\";\\r\\n                    break;\\r\\n            }\\r\\n            $scriptProperties[\'sortby\'] = preg_replace(\\"#\\\\b{$option}\\\\b#\\", $sortbyOptions, $scriptProperties[\'sortby\']);\\r\\n            $groupby[] = \\"`{$option}`.value\\";\\r\\n        }\\r\\n\\r\\n        if (!in_array($option, $joinedOptions)) {\\r\\n            $leftJoin[$option] = array(\\r\\n                \'class\' => \'msProductOption\',\\r\\n                \'on\' => \\"`{$option}`.product_id = Data.id AND `{$option}`.key = \'{$option}\'\\",\\r\\n            );\\r\\n            $joinedOptions[] = $option;\\r\\n        }\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n$default = array(\\r\\n    \'class\' => \'msProduct\',\\r\\n    \'where\' => $where,\\r\\n    \'leftJoin\' => $leftJoin,\\r\\n    \'innerJoin\' => $innerJoin,\\r\\n    \'select\' => $select,\\r\\n    \'sortby\' => \'msProduct.id\',\\r\\n    \'sortdir\' => \'ASC\',\\r\\n    \'groupby\' => implode(\', \', $groupby),\\r\\n    \'return\' => !empty($returnIds)\\r\\n        ? \'ids\'\\r\\n        : \'data\',\\r\\n    \'nestedChunkPrefix\' => \'minishop2_\',\\r\\n);\\r\\n\\/\\/ Merge all properties and run!\\r\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties), false);\\r\\n$rows = $pdoFetch->run();\\r\\n\\r\\n\\/\\/ Process rows\\r\\n$output = array();\\r\\nif (!empty($rows) && is_array($rows)) {\\r\\n    $c = $modx->newQuery(\'modPluginEvent\', array(\'event:IN\' => array(\'msOnGetProductPrice\', \'msOnGetProductWeight\')));\\r\\n    $c->innerJoin(\'modPlugin\', \'modPlugin\', \'modPlugin.id = modPluginEvent.pluginid\');\\r\\n    $c->where(\'modPlugin.disabled = 0\');\\r\\n\\r\\n    $modifications = $modx->getOption(\'ms2_price_snippet\', null, false, true) ||\\r\\n        $modx->getOption(\'ms2_weight_snippet\', null, false, true) || $modx->getCount(\'modPluginEvent\', $c);\\r\\n    if ($modifications) {\\r\\n        \\/** @var msProductData $product *\\/\\r\\n        $product = $modx->newObject(\'msProductData\');\\r\\n    }\\r\\n    $pdoFetch->addTime(\'Checked the active modifiers\');\\r\\n\\r\\n    $opt_time = 0;\\r\\n    foreach ($rows as $k => $row) {\\r\\n        if ($modifications) {\\r\\n            $product->fromArray($row, \'\', true, true);\\r\\n            $tmp = $row[\'price\'];\\r\\n            $row[\'price\'] = $product->getPrice($row);\\r\\n            $row[\'weight\'] = $product->getWeight($row);\\r\\n            \\/\\/ A discount here, so we should replace old price\\r\\n            if ($row[\'price\'] < $tmp) {\\r\\n                $row[\'old_price\'] = $tmp;\\r\\n            }\\r\\n        }\\r\\n        $row[\'price\'] = $miniShop2->formatPrice($row[\'price\']);\\r\\n        $row[\'old_price\'] = $miniShop2->formatPrice($row[\'old_price\']);\\r\\n        $row[\'weight\'] = $miniShop2->formatWeight($row[\'weight\']);\\r\\n        $row[\'idx\'] = $pdoFetch->idx++;\\r\\n\\r\\n        $opt_time_start = microtime(true);\\r\\n        $options = $modx->call(\'msProductData\', \'loadOptions\', array(&$modx, $row[\'id\']));\\r\\n        $row = array_merge($row, $options);\\r\\n        $opt_time += microtime(true) - $opt_time_start;\\r\\n\\r\\n        $tpl = $pdoFetch->defineChunk($row);\\r\\n        $output[] = $pdoFetch->getChunk($tpl, $row);\\r\\n    }\\r\\n    $pdoFetch->addTime(\'Time to load products options\', $opt_time);\\r\\n}\\r\\n\\r\\n$log = \'\';\\r\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\r\\n    $log .= \'<pre class=\\"msProductsLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\r\\n}\\r\\n\\r\\n\\/\\/ Return output\\r\\nif (!empty($returnIds) && is_string($rows)) {\\r\\n    $modx->setPlaceholder(\'msProducts.log\', $log);\\r\\n    if (!empty($toPlaceholder)) {\\r\\n        $modx->setPlaceholder($toPlaceholder, $rows);\\r\\n    } else {\\r\\n        return $rows;\\r\\n    }\\r\\n} elseif (!empty($toSeparatePlaceholders)) {\\r\\n    $output[\'log\'] = $log;\\r\\n    $modx->setPlaceholders($output, $toSeparatePlaceholders);\\r\\n} else {\\r\\n    if (empty($outputSeparator)) {\\r\\n        $outputSeparator = \\"\\\\n\\";\\r\\n    }\\r\\n    $output[\'log\'] = $log;\\r\\n    $output = implode($outputSeparator, $output);\\r\\n\\r\\n    if (!empty($tplWrapper) && (!empty($wrapIfEmpty) || !empty($output))) {\\r\\n        $output = $pdoFetch->getChunk($tplWrapper, array(\\r\\n            \'output\' => $output,\\r\\n        ));\\r\\n    }\\r\\n\\r\\n    if (!empty($toPlaceholder)) {\\r\\n        $modx->setPlaceholder($toPlaceholder, $output);\\r\\n    } else {\\r\\n        return $output;\\r\\n    }\\r\\n}"}',
);