<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '520d6b3d569521885195ec4cb3bf4c6e',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '5f5b1cd3149b42d48f405b57a41e9a82',
  'native_key' => 51,
  'object' => '{"id":51,"source":1,"property_preprocess":0,"name":"mFilter2","description":"","editor_type":0,"category":13,"cache_type":0,"snippet":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\n\\/** @var mSearch2 $mSearch2 *\\/\\nif (!$modx->loadClass(\'msearch2\', MODX_CORE_PATH . \'components\\/msearch2\\/model\\/msearch2\\/\', false, true)) {return false;}\\n$mSearch2 = new mSearch2($modx, $scriptProperties);\\n$mSearch2->initialize($modx->context->key);\\n$mSearch2->pdoTools->setConfig($scriptProperties);\\n$mSearch2->pdoTools->addTime(\'pdoTools loaded.\');\\n$savedProperties = array();\\n\\nif (empty($queryVar)) {$queryVar = \'query\';}\\nif (empty($parentsVar)) {$parentsVar = \'parents\';}\\nif (empty($minQuery)) {$minQuery = $modx->getOption(\'index_min_words_length\', null, 3, true);}\\nif (empty($classActive)) {$classActive = \'active\';}\\nif (isset($scriptProperties[\'disableSuggestions\'])) {$scriptProperties[\'suggestions\'] = empty($scriptProperties[\'disableSuggestions\']);}\\nif (empty($toPlaceholders) && !empty($toPlaceholder)) {$toPlaceholders = $toPlaceholder;}\\nif (empty($plPrefix)) {$plPrefix = \'mse2_\';}\\nif (isset($_REQUEST[\'limit\']) && is_numeric($_REQUEST[\'limit\']) && abs($_REQUEST[\'limit\']) > 0) {$limit = abs($_REQUEST[\'limit\']);}\\nelseif (!isset($limit) || $limit === \'\') {$limit = 10;}\\nif (!isset($outputSeparator)) {$outputSeparator = \\"\\\\n\\";}\\n$fastMode = !empty($fastMode);\\n\\/\\/ All templates of filters are converted to lowercase\\nforeach ($scriptProperties as $k => $v) {\\n\\tif (strpos($k, \'tplFilter\') === 0) {\\n\\t\\t$tmp = \'tplFilter.\' . strtolower(substr($k, 10));\\n\\t\\tif ($tmp != $k) {\\n\\t\\t\\tunset($scriptProperties[$k]);\\n\\t\\t\\t$scriptProperties[$tmp] = $v;\\n\\t\\t}\\n\\t}\\n}\\n\\n$class = \'modResource\';\\n$output = array(\'filters\' => array(), \'results\' => array(), \'total\' => 0, \'limit\' => $limit);\\n$ids = $found = $log = $where = array();\\n\\n\\/\\/ ---------------------- Retrieving ids of resources for filter\\n$query = !empty($_REQUEST[$queryVar])\\n\\t? $mSearch2->getQuery(rawurldecode($_REQUEST[$queryVar]))\\n\\t: \'\';\\n\\n\\/\\/ Filter by ids\\nif (!empty($resources)) {\\n\\t$ids = array_map(\'trim\', explode(\',\', $resources));\\n}\\nelseif (isset($_REQUEST[$queryVar]) && empty($query)) {\\n\\t$output[\'results\'] =  $modx->lexicon(\'mse2_err_no_query\');\\n}\\nelseif (empty($query) && !empty($forceSearch)) {\\n\\t$output[\'results\'] = $modx->lexicon(\'mse2_err_no_query_var\');\\n}\\nelseif (isset($_REQUEST[$queryVar]) && !preg_match(\'\\/^[0-9]{2,}$\\/\', $query) && mb_strlen($query,\'UTF-8\') < $minQuery) {\\n\\t$output[\'results\'] = $modx->lexicon(\'mse2_err_min_query\');\\n}\\nelseif (isset($_REQUEST[$queryVar])) {\\n\\t$modx->setPlaceholder($plPrefix.$queryVar, $query);\\n\\n\\t$found = $mSearch2->Search($query);\\n\\t$ids = array_keys($found);\\n    \\/*\\n\\tif (!empty($ids)) {\\n\\t\\t$tmp = $scriptProperties;\\n\\t\\t$tmp[\'returnIds\'] = 1;\\n\\t\\t$tmp[\'resources\'] = implode(\',\', $ids);\\n\\t\\t$tmp[\'parents\'] = $scriptProperties[\'parents\'];\\n\\t\\t$tmp[\'limit\'] = 0;\\n        $mSearch2->pdoTools->addTime(\'Pass ids to the snippet \'.$scriptProperties[\'element\'].\': \\"\'.$tmp[\'resources\'].\'\\"\');\\n\\t\\t$ids = explode(\',\', $modx->runSnippet($scriptProperties[\'element\'], $tmp));\\n\\t\\t$mSearch2->pdoTools->addTime($scriptProperties[\'element\'] . \' returned ids: \\"\'.implode(\',\',$ids).\'\\"\');\\n\\t}\\n\\tif (empty($ids[0])) {\\n\\t\\t$output[\'results\'] = $modx->lexicon(\'mse2_err_no_results\');\\n\\t}\\n    *\\/\\n}\\n\\n$modx->setPlaceholder($plPrefix.$queryVar, $query);\\n\\n\\/\\/ Has error message - exit\\nif (!empty($output[\'results\'])) {\\n\\t$log = \'\';\\n\\tif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t\\t$log = \'<pre class=\\"mFilterLog\\">\' . print_r($mSearch2->pdoTools->getTime(), 1) . \'<\\/pre>\';\\n\\t}\\n\\tif (!empty($toSeparatePlaceholders)) {\\n\\t\\t$output[\'log\'] = $log;\\n\\t\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telseif (!empty($toPlaceholders)) {\\n\\t\\t$output[\'log\'] = $log;\\n\\t\\t$modx->setPlaceholders($output, $toPlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telse {\\n\\t\\t$output = $mSearch2->pdoTools->getChunk($scriptProperties[\'tplOuter\'], $output, $fastMode);\\n\\t\\t$output .= $log;\\n\\t\\treturn $output;\\n\\t}\\n}\\n\\n\\/\\/ ---------------------- Checking resources by status and custom \\"where\\" parameter\\n\\/\\/ Support for specifying property set in the element name\\n$elementName = $scriptProperties[\'element\'];\\n$elementSet = array();\\nif (strpos($elementName, \'@\') !== false) {\\n\\tlist($elementName, $elementSet) = explode(\'@\', $elementName);\\n}\\n\\/** @var modSnippet $snippet *\\/\\nif (!empty($elementName) && $element = $modx->getObject(\'modSnippet\', array(\'name\' => $elementName))) {\\n\\t$elementProperties = $element->getProperties();\\n\\t$elementPropertySet = !empty($elementSet)\\n\\t\\t? $element->getPropertySet($elementSet)\\n\\t\\t: array();\\n\\tif (!is_array($elementPropertySet)) {$elementPropertySet = array();}\\n\\t$params = array_merge(\\n\\t\\t$elementProperties,\\n\\t\\t$elementPropertySet,\\n\\t\\t$scriptProperties,\\n\\t\\tarray(\\n\\t\\t\\t\'parents\' => empty($scriptProperties[$parentsVar]) && !empty($_REQUEST[$parentsVar])\\n\\t\\t\\t\\t? $_REQUEST[$parentsVar]\\n\\t\\t\\t\\t: $scriptProperties[$parentsVar],\\n\\t\\t\\t\'returnIds\' => 1,\\n\\t\\t\\t\'limit\' => 0,\\n\\t\\t)\\n\\t);\\n\\tif (!empty($ids)) {\\n\\t\\t$params[\'resources\'] = implode(\',\', $ids);\\n\\t}\\n\\t$element->setCacheable(false);\\n\\tif ($tmp = $element->process($params)) {\\n        $ids = explode(\',\', $tmp);\\n\\t}\\n\\t$mSearch2->pdoTools->addTime(\'Fetched \'.count($ids).\' ids for building filters from element \\"\'.$elementName.\'\\"\');\\n}\\nelse {\\n\\t$modx->log(modX::LOG_LEVEL_ERROR, \'[mSearch2] Could not find main snippet with name: \\"\'.$elementName.\'\\"\');\\n\\treturn \'\';\\n}\\n\\n\\/\\/ ---------------------- Nothing to filter, exit\\nif (empty($ids)) {\\n    $log = $modx->user->hasSessionContext(\'mgr\') && !empty($showLog)\\n\\t\\t? \'<pre class=\\"mFilterLog\\">\' . print_r($mSearch2->pdoTools->getTime(), 1) . \'<\\/pre>\'\\n        : \'\';\\n\\t$output = array_merge($output, array(\\n\\t\\t\'filters\' => $modx->lexicon(\'mse2_err_no_filters\'),\\n\\t\\t\'results\' => $modx->lexicon(\'mse2_err_no_results\'),\\n\\t\\t\'log\' => $log\\n\\t));\\n\\n\\tif (!empty($toSeparatePlaceholders)) {\\n\\t\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telseif (!empty($toPlaceholders)) {\\n\\t\\t$modx->setPlaceholders($output, $toPlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telse {\\n\\t\\t$output[\'results\'] .= $log;\\n\\t\\treturn $mSearch2->pdoTools->getChunk($scriptProperties[\'tplOuter\'], $output, $fastMode);\\n\\t}\\n}\\n\\n\\/\\/ ---------------------- Checking for suggestions processing\\n\\/\\/ Checking by results count\\nif (!empty($scriptProperties[\'suggestionsMaxResults\']) && count($ids) > $scriptProperties[\'suggestionsMaxResults\']) {\\n\\t$scriptProperties[\'suggestions\'] = false;\\n\\t$mSearch2->pdoTools->addTime(\'Suggestions disabled by \\"suggestionsMaxResults\\" parameter: results count is \'.count($ids).\', max allowed is \'.$scriptProperties[\'suggestionsMaxResults\']);\\n}\\nelse {\\n\\t$mSearch2->pdoTools->addTime(\'Total number of results: \'.count($ids));\\n}\\n\\n\\/\\/ Then get filters\\n$mSearch2->pdoTools->addTime(\'Getting filters for \'.count($ids).\' ids\');\\n$filters = $mSearch2->getFilters($ids);\\n\\/\\/ And checking by filters count\\n$count = 0;\\nif (!empty($filters) && $scriptProperties[\'suggestions\']) {\\n    foreach ($filters as $tmp) {\\n        if (!is_array($tmp)) {continue;}\\n        $count += count(array_values($tmp));\\n    }\\n    if (!empty($scriptProperties[\'suggestionsMaxFilters\']) && $count > $scriptProperties[\'suggestionsMaxFilters\']) {\\n        $scriptProperties[\'suggestions\'] = false;\\n        $mSearch2->pdoTools->addTime(\'Suggestions disabled by \\"suggestionsMaxFilters\\" parameter: filters count is \'.$count.\', max allowed is \'.$scriptProperties[\'suggestionsMaxFilters\']);\\n    }\\n    else {\\n        $mSearch2->pdoTools->addTime(\'Total number of filters: \'.$count);\\n    }\\n}\\n$modx->setPlaceholder($plPrefix . \'filters_count\', $count );\\n\\n\\n\\/\\/ ---------------------- Loading results\\n$start_sort = implode(\',\', array_map(\'trim\' , explode(\',\', $scriptProperties[\'sort\'])));\\n$start_limit = 0;\\n$suggestions = array();\\n$page = $sort = \'\';\\n\\n\\/\\/ Support for specifying property set in the paginator name\\n$paginatorName = $scriptProperties[\'paginator\'];\\n$paginatorSet = array();\\nif (strpos($paginatorName, \'@\') !== false) {\\n\\tlist($paginatorName, $paginatorSet) = explode(\'@\', $paginatorName);\\n}\\n\\n\\/** @var modSnippet $paginator *\\/\\nif (!$paginator = $modx->getObject(\'modSnippet\', array(\'name\' => $paginatorName))) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'[mSearch2] Could not find pagination snippet with name: \\"\'.$paginatorName.\'\\"\');\\n\\n    return \'\';\\n}\\n$paginatorProperties = $paginator->getProperties();\\n$paginatorPropertySet = !empty($paginatorSet)\\n    ? $paginator->getPropertySet($paginatorSet)\\n    : array();\\nif (!is_array($paginatorPropertySet)) {$paginatorPropertySet = array();}\\n$paginatorProperties = array_merge(\\n    $paginatorProperties,\\n    $paginatorPropertySet,\\n    $elementPropertySet,\\n    $scriptProperties,\\n    array(\\n        \'resources\' => implode(\',\', $ids),\\n        \'parents\' => \'0\',\\n        \'element\' => $elementName,\\n        \'defaultSort\' => $start_sort,\\n        \'toPlaceholder\' => false,\\n        \'limit\' => $limit,\\n        \'ajaxMode\' => \'\',\\n        \'ajax\' => 0,\\n        \'frontend_js\' => \'\',\\n        \'frontend_css\' => \'\',\\n    )\\n);\\n\\n\\/\\/ Switching chunk for rows, if specified\\nif (!empty($scriptProperties[\'tpls\'])) {\\n    $tmp = isset($_REQUEST[\'tpl\']) ? (integer) $_REQUEST[\'tpl\'] : 0;\\n    $tpls = array_map(\'trim\', explode(\',\', $scriptProperties[\'tpls\']));\\n    $paginatorProperties[\'tpls\'] = $tpls;\\n    if (isset($tpls[$tmp])) {\\n        $paginatorProperties[\'tpl\'] = $tpls[$tmp];\\n        $paginatorProperties[\'tpl_idx\'] = $tmp;\\n    }\\n}\\n\\n\\/\\/ Trying to save weight of found ids if using mSearch2\\n$weight = false;\\nif (!empty($found) && strtolower($elementName) == \'msearch2\') {\\n    $tmp = array();\\n    foreach ($ids as $v) {\\n        $tmp[$v] = isset($found[$v])\\n            ? $found[$v]\\n            : 0;\\n    }\\n    $paginatorProperties[\'resources\'] = $modx->toJSON($tmp);\\n    $weight = true;\\n}\\n\\nif (!empty($_REQUEST[\'sort\'])) {$sort = $_REQUEST[\'sort\'];}\\nelseif (!empty($start_sort)) {$sort = $start_sort;}\\n\\/*\\nelse {\\n    $sortby = !empty($scriptProperties[\'sortby\']) ? $scriptProperties[\'sortby\'] : \'\';\\n    if (!empty($sortby)) {\\n        $sortdir = !empty($scriptProperties[\'sortdir\']) ? $scriptProperties[\'sortdir\'] : \'asc\';\\n        $sort = $sortby.$mSearch2->config[\'method_delimeter\'].$sortdir;\\n    }\\n}*\\/\\nif (!empty($_REQUEST[$paginatorProperties[\'pageVarKey\']])) {\\n    $page = (int) $_REQUEST[$paginatorProperties[\'pageVarKey\']];\\n}\\nif (!empty($sort)) {\\n    $paginatorProperties[\'sortby\'] = $mSearch2->getSortFields($sort);\\n    $paginatorProperties[\'sortdir\'] = \'\';\\n}\\n\\n$start_limit = !empty($scriptProperties[\'limit\'])\\n        ? $scriptProperties[\'limit\']\\n        : $paginatorProperties[\'limit\'];\\n$paginatorProperties[\'start_limit\'] = $start_limit;\\n$savedProperties[\'paginatorProperties\'] = $paginatorProperties;\\n\\n\\/\\/ We have a delimiters in $_GET, so need to filter resources\\nif (strpos(implode(array_keys($_GET)), $mSearch2->config[\'filter_delimeter\']) !== false || !empty($mSearch2->aliases)) {\\n    $matched = $mSearch2->Filter($ids, $_REQUEST);\\n    $matched = array_intersect($ids, $matched);\\n    if ($scriptProperties[\'suggestions\']) {\\n        $suggestions = $mSearch2->getSuggestions($ids, $_REQUEST, $matched);\\n        $mSearch2->pdoTools->addTime(\'Suggestions retrieved.\');\\n    }\\n    \\/\\/ Trying to save weight of found ids again\\n    if ($weight) {\\n        $tmp = array();\\n        foreach ($matched as $v) {$tmp[$v] = isset($found[$v]) ? $found[$v] : 0;}\\n        $paginatorProperties[\'resources\'] = $modx->toJSON($tmp);\\n    }\\n    else {\\n        $paginatorProperties[\'resources\'] = implode(\',\', $matched);\\n    }\\n}\\n\\/\\/ Saving log\\n$log = $mSearch2->pdoTools->timings;\\n$mSearch2->pdoTools->timings = array();\\n\\n\\/\\/$paginator->setProperties($paginatorProperties);\\n$paginator->setCacheable(false);\\n$output[\'results\'] = !empty($paginatorProperties[\'resources\'])\\n    ? $paginator->process($paginatorProperties)\\n    : $modx->lexicon(\'mse2_err_no_results\');\\n$output[\'total\'] = $modx->getPlaceholder($paginatorProperties[\'totalVar\']);\\n\\n\\/\\/ ----------------------  Loading filters\\n$mSearch2->pdoTools->timings = $log;\\nif (!empty($paginator)) {\\n\\t$mSearch2->pdoTools->addTime(\'Fired paginator: \\"\'.$paginatorName.\'\\"\');\\n}\\nelse {\\n\\t$mSearch2->pdoTools->addTime(\'Could not find pagination snippet with name: \\"\'.$paginatorName.\'\\"\');\\n}\\nif (empty($filters)) {\\n\\t$mSearch2->pdoTools->addTime(\'No filters retrieved\');\\n\\t$output[\'filters\'] = $modx->lexicon(\'mse2_err_no_filters\');\\n\\tif (empty($output[\'results\'])) {$output[\'results\'] = $modx->lexicon(\'mse2_err_no_results\');}\\n}\\nelse {\\n\\t$mSearch2->pdoTools->addTime(\'Filters retrieved\');\\n\\t$request = array();\\n\\tforeach ($_GET as $k => $v) {\\n\\t\\t$tmp = explode($mSearch2->config[\'values_delimeter\'], $v);\\n\\t\\t$request[$k] = array();\\n\\t\\tforeach ($tmp as $v2) {\\n\\t\\t\\t$request[$k][] = str_replace(\'\\"\', \'&quot;\', $v2);\\n\\t\\t}\\n\\t}\\n\\n\\t$aliases = $mSearch2->aliases;\\n\\tforeach ($filters as $filter => $data) {\\n\\t\\tif (empty($data) || !is_array($data)) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\t$rows = $has_active = \'\';\\n\\t\\tlist($table, $method) = explode($mSearch2->config[\'filter_delimeter\'], $filter);\\n\\t\\t$filter_key = !empty($aliases[$filter])\\n\\t\\t\\t? $aliases[$filter]\\n\\t\\t\\t: $filter;\\n\\n\\t\\t$tplOuter = !empty($scriptProperties[\'tplFilter.outer.\' . $filter_key])\\n\\t\\t\\t? $scriptProperties[\'tplFilter.outer.\' . $filter_key]\\n\\t\\t\\t: $scriptProperties[\'tplFilter.outer.default\'];\\n\\t\\t$tplRow = !empty($scriptProperties[\'tplFilter.row.\' . $filter_key])\\n\\t\\t\\t? $scriptProperties[\'tplFilter.row.\' . $filter_key]\\n\\t\\t\\t: $scriptProperties[\'tplFilter.row.default\'];\\n\\t\\t$tplEmpty = !empty($scriptProperties[\'tplFilter.empty.\' . $filter_key])\\n\\t\\t\\t? $scriptProperties[\'tplFilter.empty.\' . $filter_key]\\n\\t\\t\\t: \'\';\\n\\n\\t\\t$idx = 0;\\n\\t\\tforeach ($data as $v) {\\n\\t\\t\\tif (empty($v)) {continue;}\\n\\t\\t\\t$checked = isset($request[$filter_key]) && in_array((string)$v[\'value\'], $request[$filter_key], true) && isset($v[\'type\']) && $v[\'type\'] != \'number\';\\n\\t\\t\\tif ($scriptProperties[\'suggestions\']) {\\n\\t\\t\\t\\tif ($checked) {\\n\\t\\t\\t\\t\\t$num = \'\';\\n\\t\\t\\t\\t\\t$has_active = \'has_active\';\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telseif (isset($suggestions[$filter_key][$v[\'value\']])) {\\n\\t\\t\\t\\t\\t$num = $suggestions[$filter_key][$v[\'value\']];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t$num = !empty($v[\'resources\'])\\n\\t\\t\\t\\t\\t\\t? count($v[\'resources\'])\\n\\t\\t\\t\\t\\t\\t: \'\';\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\t$num = \'\';\\n\\t\\t\\t}\\n\\n\\t\\t\\t$rows .= $mSearch2->pdoTools->getChunk($tplRow, array(\\n\\t\\t\\t\\t\'filter\' => $method,\\n\\t\\t\\t\\t\'table\' => $table,\\n\\t\\t\\t\\t\'title\' => $v[\'title\'],\\n\\t\\t\\t\\t\'value\' => $v[\'value\'],\\n\\t\\t\\t\\t\'type\' => $v[\'type\'],\\n\\t\\t\\t\\t\'checked\' => $checked\\n\\t\\t\\t\\t\\t? \'checked\'\\n\\t\\t\\t\\t\\t: \'\',\\n\\t\\t\\t\\t\'selected\' => $checked\\n\\t\\t\\t\\t\\t? \'selected\'\\n\\t\\t\\t\\t\\t: \'\',\\n\\t\\t\\t\\t\'disabled\' => !$checked && empty($num) && $scriptProperties[\'suggestions\']\\n\\t\\t\\t\\t\\t? \'disabled\'\\n\\t\\t\\t\\t\\t: \'\',\\n\\t\\t\\t\\t\'delimeter\' => $mSearch2->config[\'filter_delimeter\'],\\n\\t\\t\\t\\t\'idx\' => $idx++,\\n\\t\\t\\t\\t\'num\' => $num,\\n\\t\\t\\t\\t\'filter_key\' => $filter_key,\\n\\t\\t\\t), $fastMode);\\n\\t\\t}\\n\\n\\t\\t$tpl = empty($rows) ? $tplEmpty : $tplOuter;\\n\\t\\tif (!isset($output[\'filters\'][$filter])) {\\n\\t\\t\\t$output[\'filters\'][$filter] = \'\';\\n\\t\\t}\\n\\t\\t$output[\'filters\'][$filter] = $mSearch2->pdoTools->getChunk($tpl, array(\\n\\t\\t\\t\'filter\' => $method,\\n\\t\\t\\t\'table\' => $table,\\n\\t\\t\\t\'rows\' => $rows,\\n\\t\\t\\t\'has_active\' => $has_active,\\n\\t\\t\\t\'delimeter\' => $mSearch2->config[\'filter_delimeter\'],\\n\\t\\t\\t\'filter_key\' => $filter_key,\\n\\t\\t), $fastMode);\\n\\t}\\n\\n\\tif (empty($output[\'filters\'])) {\\n\\t\\t$output[\'filters\'] = $modx->lexicon(\'mse2_err_no_filters\');\\n\\t\\tif (empty($output[\'results\'])) {$output[\'results\'] = $modx->lexicon(\'mse2_err_no_results\');}\\n\\t}\\n\\telse {\\n\\t\\t$mSearch2->pdoTools->addTime(\'Filters templated\');\\n\\t}\\n}\\n$mSearch2->pdoTools->addTime(\'Total filter operations: \'.$mSearch2->filter_operations);\\n\\n\\/\\/ Saving params into cache for ajax requests\\n$savedProperties[\'scriptProperties\'] = $scriptProperties;\\n$hash = sha1(serialize($savedProperties));\\n$_SESSION[\'mSearch2\'][$hash] = $savedProperties;\\n\\n\\/\\/ Active class for sort links\\nif (!empty($sort)) {$output[$sort] = $classActive;}\\nif (isset($paginatorProperties[\'tpl_idx\'])) {\\n\\t$output[\'tpl\'.$paginatorProperties[\'tpl_idx\']] = $classActive;\\n\\t$output[\'tpls\'] = 1;\\n}\\n\\n\\/\\/ Setting values for frontend javascript\\n$config = array(\\n\\t\'cssUrl\' => $mSearch2->config[\'cssUrl\'].\'web\\/\',\\n\\t\'jsUrl\' => $mSearch2->config[\'jsUrl\'].\'web\\/\',\\n\\t\'actionUrl\' => $mSearch2->config[\'actionUrl\'],\\n\\t\'queryVar\' => $mSearch2->config[\'queryVar\'],\\n\\t\'idVar\' => $modx->getOption(\'request_param_id\', null, \'id\'),\\n\\t\'filter_delimeter\' => $mSearch2->config[\'filter_delimeter\'],\\n\\t\'method_delimeter\' => $mSearch2->config[\'method_delimeter\'],\\n\\t\'values_delimeter\' => $mSearch2->config[\'values_delimeter\'],\\n\\t\'start_sort\' => $start_sort,\\n\\t\'start_limit\' => $start_limit,\\n\\t\'start_page\' => 1,\\n\\t\'start_tpl\' => \'\',\\n\\t\'sort\' => $sort == $start_sort ? \'\' : $sort,\\n\\t\'limit\' => $limit == $start_limit ? \'\' : $limit,\\n\\t\'page\' => $page,\\n\\t\'pageVar\' => $paginatorProperties[\'pageVarKey\'],\\n\\t\'tpl\' => !empty($paginatorProperties[\'tpl_idx\'])\\n\\t\\t\\t? $paginatorProperties[\'tpl_idx\']\\n\\t\\t\\t: \'\',\\n\\t\'parentsVar\' => $parentsVar,\\n\\t\'key\' => $hash,\\n\\t\'pageId\' => !empty($pageId) ? (integer) $pageId : $modx->resource->id,\\n\\t$queryVar => isset($_REQUEST[$queryVar]) ? $_REQUEST[$queryVar] : \'\',\\n\\t$parentsVar => isset($_REQUEST[$parentsVar]) ? $_REQUEST[$parentsVar] : \'\',\\n\\t\'aliases\' => array_flip($mSearch2->aliases),\\n\\t\'options\' => array(),\\n\\t\'mode\' => in_array($scriptProperties[\'ajaxMode\'], array(\'button\', \'scroll\')) ? $scriptProperties[\'ajaxMode\'] : \'\',\\n\\t\'moreText\' => $modx->lexicon(\'mse2_more\'),\\n);\\nif (!empty($scriptProperties[\'filterOptions\'])) {\\n\\t$filterOptions = $modx->fromJSON($scriptProperties[\'filterOptions\']);\\n\\tif (is_array($filterOptions)) {\\n\\t\\t$config[\'filterOptions\'] = $filterOptions;\\n\\t}\\n}\\nif (empty($noJsConfig)) {\\n$modx->regClientStartupScript(\'\\n<script type=\\"text\\/javascript\\">mse2Config = \' . json_encode($config) . \';<\\/script>\', true);\\n}\\nif (empty($noJsInitialize)) {\\n$modx->regClientScript(\'\\n<script type=\\"text\\/javascript\\">\\n    if ($(\\"#mse2_mfilter\\").length) {\\n        if (window.location.hash != \\"\\" && mSearch2.Hash.oldbrowser()) {\\n            var uri = window.location.hash.replace(\\"#\\", \\"?\\");\\n            window.location.href = document.location.pathname + uri;\\n        }\\n        else {\\n            mSearch2.initialize(\\"body\\");\\n        }\\n    }\\n    <\\/script>\', true);\\n}\\n$modx->setPlaceholders($config, $plPrefix);\\n\\n\\/\\/ Prepare output\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t$log = \'<pre class=\\"mFilterLog\\">\' . print_r($mSearch2->pdoTools->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nif (!empty($toSeparatePlaceholders)) {\\n\\t$modx->setPlaceholders($output[\'filters\'], $toSeparatePlaceholders);\\n\\t$output[\'log\'] = $log;\\n\\tif (is_array($output[\'filters\'])) {\\n\\t\\t$output[\'filters\'] = implode($outputSeparator, $output[\'filters\']);\\n\\t}\\n\\n\\t$pcre = \'#^\' . preg_quote($toSeparatePlaceholders) . \'(\\\\d+)$#\';\\n\\t$tmp = array();\\n\\tforeach ($modx->placeholders as $k => $v) {\\n\\t\\tif (preg_match($pcre, $k)) {\\n\\t\\t\\t$tmp[] = $v;\\n\\t\\t}\\n\\t}\\n\\n\\t$output[\'results\'] = !empty($tmp)\\n\\t\\t? implode($outputSeparator, $tmp)\\n\\t\\t: $modx->lexicon(\'mse2_err_no_results\');\\n\\n\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n}\\nelse {\\n\\tif (is_array($output[\'filters\'])) {\\n\\t\\t$output[\'filters\'] = implode($outputSeparator, $output[\'filters\']);\\n\\t}\\n\\tif (!empty($toPlaceholders)) {\\n\\t\\t$output[\'log\'] = $log;\\n\\t\\t$modx->setPlaceholders($output, $toPlaceholders);\\n\\t}\\n\\telse {\\n\\t\\t$output = $mSearch2->pdoTools->getChunk($scriptProperties[\'tplOuter\'], $output, $fastMode);\\n\\t\\t$output .= $log;\\n\\n\\t\\treturn $output;\\n\\t}\\n}","locked":0,"properties":"a:37:{s:9:\\"paginator\\";a:7:{s:4:\\"name\\";s:9:\\"paginator\\";s:4:\\"desc\\";s:19:\\"mse2_prop_paginator\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:7:\\"pdoPage\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"element\\";a:7:{s:4:\\"name\\";s:7:\\"element\\";s:4:\\"desc\\";s:17:\\"mse2_prop_element\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:8:\\"mSearch2\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"sort\\";a:7:{s:4:\\"name\\";s:4:\\"sort\\";s:4:\\"desc\\";s:14:\\"mse2_prop_sort\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"filters\\";a:7:{s:4:\\"name\\";s:7:\\"filters\\";s:4:\\"desc\\";s:17:\\"mse2_prop_filters\\";s:4:\\"type\\";s:8:\\"textarea\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:23:\\"resource|parent:parents\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"aliases\\";a:7:{s:4:\\"name\\";s:7:\\"aliases\\";s:4:\\"desc\\";s:17:\\"mse2_prop_aliases\\";s:4:\\"type\\";s:8:\\"textarea\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"showEmptyFilters\\";a:7:{s:4:\\"name\\";s:16:\\"showEmptyFilters\\";s:4:\\"desc\\";s:26:\\"mse2_prop_showEmptyFilters\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"resources\\";a:7:{s:4:\\"name\\";s:9:\\"resources\\";s:4:\\"desc\\";s:19:\\"mse2_prop_resources\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"parents\\";a:7:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:17:\\"mse2_prop_parents\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"depth\\";a:7:{s:4:\\"name\\";s:5:\\"depth\\";s:4:\\"desc\\";s:15:\\"mse2_prop_depth\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"tplOuter\\";a:7:{s:4:\\"name\\";s:8:\\"tplOuter\\";s:4:\\"desc\\";s:18:\\"mse2_prop_tplOuter\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:18:\\"tpl.mFilter2.outer\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:23:\\"tplFilter.outer.default\\";a:7:{s:4:\\"name\\";s:23:\\"tplFilter.outer.default\\";s:4:\\"desc\\";s:33:\\"mse2_prop_tplFilter.outer.default\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:25:\\"tpl.mFilter2.filter.outer\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"tplFilter.row.default\\";a:7:{s:4:\\"name\\";s:21:\\"tplFilter.row.default\\";s:4:\\"desc\\";s:31:\\"mse2_prop_tplFilter.row.default\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:28:\\"tpl.mFilter2.filter.checkbox\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:20:\\"mse2_prop_showHidden\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"showDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"showDeleted\\";s:4:\\"desc\\";s:21:\\"mse2_prop_showDeleted\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"showUnpublished\\";a:7:{s:4:\\"name\\";s:15:\\"showUnpublished\\";s:4:\\"desc\\";s:25:\\"mse2_prop_showUnpublished\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"hideContainers\\";a:7:{s:4:\\"name\\";s:14:\\"hideContainers\\";s:4:\\"desc\\";s:24:\\"mse2_prop_hideContainers\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:17:\\"mse2_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fastMode\\";a:7:{s:4:\\"name\\";s:8:\\"fastMode\\";s:4:\\"desc\\";s:18:\\"mse2_prop_fastMode\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"suggestions\\";a:7:{s:4:\\"name\\";s:11:\\"suggestions\\";s:4:\\"desc\\";s:21:\\"mse2_prop_suggestions\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"suggestionsMaxFilters\\";a:7:{s:4:\\"name\\";s:21:\\"suggestionsMaxFilters\\";s:4:\\"desc\\";s:31:\\"mse2_prop_suggestionsMaxFilters\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:400;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"suggestionsMaxResults\\";a:7:{s:4:\\"name\\";s:21:\\"suggestionsMaxResults\\";s:4:\\"desc\\";s:31:\\"mse2_prop_suggestionsMaxResults\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:2000;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"suggestionsRadio\\";a:7:{s:4:\\"name\\";s:16:\\"suggestionsRadio\\";s:4:\\"desc\\";s:26:\\"mse2_prop_suggestionsRadio\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"toPlaceholders\\";a:7:{s:4:\\"name\\";s:14:\\"toPlaceholders\\";s:4:\\"desc\\";s:24:\\"mse2_prop_toPlaceholders\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"toSeparatePlaceholders\\";a:7:{s:4:\\"name\\";s:22:\\"toSeparatePlaceholders\\";s:4:\\"desc\\";s:32:\\"mse2_prop_toSeparatePlaceholders\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"filter_delimeter\\";a:7:{s:4:\\"name\\";s:16:\\"filter_delimeter\\";s:4:\\"desc\\";s:26:\\"mse2_prop_filter_delimeter\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\"|\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"method_delimeter\\";a:7:{s:4:\\"name\\";s:16:\\"method_delimeter\\";s:4:\\"desc\\";s:26:\\"mse2_prop_method_delimeter\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\":\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"values_delimeter\\";a:7:{s:4:\\"name\\";s:16:\\"values_delimeter\\";s:4:\\"desc\\";s:26:\\"mse2_prop_values_delimeter\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\",\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"tpls\\";a:7:{s:4:\\"name\\";s:4:\\"tpls\\";s:4:\\"desc\\";s:14:\\"mse2_prop_tpls\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"forceSearch\\";a:7:{s:4:\\"name\\";s:11:\\"forceSearch\\";s:4:\\"desc\\";s:21:\\"mse2_prop_forceSearch\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"fields\\";a:7:{s:4:\\"name\\";s:6:\\"fields\\";s:4:\\"desc\\";s:16:\\"mse2_prop_fields\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"onlyIndex\\";a:7:{s:4:\\"name\\";s:9:\\"onlyIndex\\";s:4:\\"desc\\";s:19:\\"mse2_prop_onlyIndex\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"onlyAllWords\\";a:7:{s:4:\\"name\\";s:12:\\"onlyAllWords\\";s:4:\\"desc\\";s:22:\\"mse2_prop_onlyAllWords\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"showSearchLog\\";a:7:{s:4:\\"name\\";s:13:\\"showSearchLog\\";s:4:\\"desc\\";s:23:\\"mse2_prop_showSearchLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"filterOptions\\";a:7:{s:4:\\"name\\";s:13:\\"filterOptions\\";s:4:\\"desc\\";s:23:\\"mse2_prop_filterOptions\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:18:\\"suggestionsSliders\\";a:7:{s:4:\\"name\\";s:18:\\"suggestionsSliders\\";s:4:\\"desc\\";s:28:\\"mse2_prop_suggestionsSliders\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"ajaxMode\\";a:7:{s:4:\\"name\\";s:8:\\"ajaxMode\\";s:4:\\"desc\\";s:18:\\"mse2_prop_ajaxMode\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:3:{i:0;a:2:{s:4:\\"text\\";s:7:\\"Default\\";s:5:\\"value\\";s:0:\\"\\";}i:1;a:2:{s:4:\\"text\\";s:6:\\"Scroll\\";s:5:\\"value\\";s:6:\\"scroll\\";}i:2;a:2:{s:4:\\"text\\";s:6:\\"Button\\";s:5:\\"value\\";s:6:\\"button\\";}}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"cacheTime\\";a:7:{s:4:\\"name\\";s:9:\\"cacheTime\\";s:4:\\"desc\\";s:19:\\"mse2_prop_cacheTime\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:19:\\"msearch2:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/msearch2\\/elements\\/snippets\\/snippet.mfilter2.php","content":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\n\\/** @var mSearch2 $mSearch2 *\\/\\nif (!$modx->loadClass(\'msearch2\', MODX_CORE_PATH . \'components\\/msearch2\\/model\\/msearch2\\/\', false, true)) {return false;}\\n$mSearch2 = new mSearch2($modx, $scriptProperties);\\n$mSearch2->initialize($modx->context->key);\\n$mSearch2->pdoTools->setConfig($scriptProperties);\\n$mSearch2->pdoTools->addTime(\'pdoTools loaded.\');\\n$savedProperties = array();\\n\\nif (empty($queryVar)) {$queryVar = \'query\';}\\nif (empty($parentsVar)) {$parentsVar = \'parents\';}\\nif (empty($minQuery)) {$minQuery = $modx->getOption(\'index_min_words_length\', null, 3, true);}\\nif (empty($classActive)) {$classActive = \'active\';}\\nif (isset($scriptProperties[\'disableSuggestions\'])) {$scriptProperties[\'suggestions\'] = empty($scriptProperties[\'disableSuggestions\']);}\\nif (empty($toPlaceholders) && !empty($toPlaceholder)) {$toPlaceholders = $toPlaceholder;}\\nif (empty($plPrefix)) {$plPrefix = \'mse2_\';}\\nif (isset($_REQUEST[\'limit\']) && is_numeric($_REQUEST[\'limit\']) && abs($_REQUEST[\'limit\']) > 0) {$limit = abs($_REQUEST[\'limit\']);}\\nelseif (!isset($limit) || $limit === \'\') {$limit = 10;}\\nif (!isset($outputSeparator)) {$outputSeparator = \\"\\\\n\\";}\\n$fastMode = !empty($fastMode);\\n\\/\\/ All templates of filters are converted to lowercase\\nforeach ($scriptProperties as $k => $v) {\\n\\tif (strpos($k, \'tplFilter\') === 0) {\\n\\t\\t$tmp = \'tplFilter.\' . strtolower(substr($k, 10));\\n\\t\\tif ($tmp != $k) {\\n\\t\\t\\tunset($scriptProperties[$k]);\\n\\t\\t\\t$scriptProperties[$tmp] = $v;\\n\\t\\t}\\n\\t}\\n}\\n\\n$class = \'modResource\';\\n$output = array(\'filters\' => array(), \'results\' => array(), \'total\' => 0, \'limit\' => $limit);\\n$ids = $found = $log = $where = array();\\n\\n\\/\\/ ---------------------- Retrieving ids of resources for filter\\n$query = !empty($_REQUEST[$queryVar])\\n\\t? $mSearch2->getQuery(rawurldecode($_REQUEST[$queryVar]))\\n\\t: \'\';\\n\\n\\/\\/ Filter by ids\\nif (!empty($resources)) {\\n\\t$ids = array_map(\'trim\', explode(\',\', $resources));\\n}\\nelseif (isset($_REQUEST[$queryVar]) && empty($query)) {\\n\\t$output[\'results\'] =  $modx->lexicon(\'mse2_err_no_query\');\\n}\\nelseif (empty($query) && !empty($forceSearch)) {\\n\\t$output[\'results\'] = $modx->lexicon(\'mse2_err_no_query_var\');\\n}\\nelseif (isset($_REQUEST[$queryVar]) && !preg_match(\'\\/^[0-9]{2,}$\\/\', $query) && mb_strlen($query,\'UTF-8\') < $minQuery) {\\n\\t$output[\'results\'] = $modx->lexicon(\'mse2_err_min_query\');\\n}\\nelseif (isset($_REQUEST[$queryVar])) {\\n\\t$modx->setPlaceholder($plPrefix.$queryVar, $query);\\n\\n\\t$found = $mSearch2->Search($query);\\n\\t$ids = array_keys($found);\\n    \\/*\\n\\tif (!empty($ids)) {\\n\\t\\t$tmp = $scriptProperties;\\n\\t\\t$tmp[\'returnIds\'] = 1;\\n\\t\\t$tmp[\'resources\'] = implode(\',\', $ids);\\n\\t\\t$tmp[\'parents\'] = $scriptProperties[\'parents\'];\\n\\t\\t$tmp[\'limit\'] = 0;\\n        $mSearch2->pdoTools->addTime(\'Pass ids to the snippet \'.$scriptProperties[\'element\'].\': \\"\'.$tmp[\'resources\'].\'\\"\');\\n\\t\\t$ids = explode(\',\', $modx->runSnippet($scriptProperties[\'element\'], $tmp));\\n\\t\\t$mSearch2->pdoTools->addTime($scriptProperties[\'element\'] . \' returned ids: \\"\'.implode(\',\',$ids).\'\\"\');\\n\\t}\\n\\tif (empty($ids[0])) {\\n\\t\\t$output[\'results\'] = $modx->lexicon(\'mse2_err_no_results\');\\n\\t}\\n    *\\/\\n}\\n\\n$modx->setPlaceholder($plPrefix.$queryVar, $query);\\n\\n\\/\\/ Has error message - exit\\nif (!empty($output[\'results\'])) {\\n\\t$log = \'\';\\n\\tif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t\\t$log = \'<pre class=\\"mFilterLog\\">\' . print_r($mSearch2->pdoTools->getTime(), 1) . \'<\\/pre>\';\\n\\t}\\n\\tif (!empty($toSeparatePlaceholders)) {\\n\\t\\t$output[\'log\'] = $log;\\n\\t\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telseif (!empty($toPlaceholders)) {\\n\\t\\t$output[\'log\'] = $log;\\n\\t\\t$modx->setPlaceholders($output, $toPlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telse {\\n\\t\\t$output = $mSearch2->pdoTools->getChunk($scriptProperties[\'tplOuter\'], $output, $fastMode);\\n\\t\\t$output .= $log;\\n\\t\\treturn $output;\\n\\t}\\n}\\n\\n\\/\\/ ---------------------- Checking resources by status and custom \\"where\\" parameter\\n\\/\\/ Support for specifying property set in the element name\\n$elementName = $scriptProperties[\'element\'];\\n$elementSet = array();\\nif (strpos($elementName, \'@\') !== false) {\\n\\tlist($elementName, $elementSet) = explode(\'@\', $elementName);\\n}\\n\\/** @var modSnippet $snippet *\\/\\nif (!empty($elementName) && $element = $modx->getObject(\'modSnippet\', array(\'name\' => $elementName))) {\\n\\t$elementProperties = $element->getProperties();\\n\\t$elementPropertySet = !empty($elementSet)\\n\\t\\t? $element->getPropertySet($elementSet)\\n\\t\\t: array();\\n\\tif (!is_array($elementPropertySet)) {$elementPropertySet = array();}\\n\\t$params = array_merge(\\n\\t\\t$elementProperties,\\n\\t\\t$elementPropertySet,\\n\\t\\t$scriptProperties,\\n\\t\\tarray(\\n\\t\\t\\t\'parents\' => empty($scriptProperties[$parentsVar]) && !empty($_REQUEST[$parentsVar])\\n\\t\\t\\t\\t? $_REQUEST[$parentsVar]\\n\\t\\t\\t\\t: $scriptProperties[$parentsVar],\\n\\t\\t\\t\'returnIds\' => 1,\\n\\t\\t\\t\'limit\' => 0,\\n\\t\\t)\\n\\t);\\n\\tif (!empty($ids)) {\\n\\t\\t$params[\'resources\'] = implode(\',\', $ids);\\n\\t}\\n\\t$element->setCacheable(false);\\n\\tif ($tmp = $element->process($params)) {\\n        $ids = explode(\',\', $tmp);\\n\\t}\\n\\t$mSearch2->pdoTools->addTime(\'Fetched \'.count($ids).\' ids for building filters from element \\"\'.$elementName.\'\\"\');\\n}\\nelse {\\n\\t$modx->log(modX::LOG_LEVEL_ERROR, \'[mSearch2] Could not find main snippet with name: \\"\'.$elementName.\'\\"\');\\n\\treturn \'\';\\n}\\n\\n\\/\\/ ---------------------- Nothing to filter, exit\\nif (empty($ids)) {\\n    $log = $modx->user->hasSessionContext(\'mgr\') && !empty($showLog)\\n\\t\\t? \'<pre class=\\"mFilterLog\\">\' . print_r($mSearch2->pdoTools->getTime(), 1) . \'<\\/pre>\'\\n        : \'\';\\n\\t$output = array_merge($output, array(\\n\\t\\t\'filters\' => $modx->lexicon(\'mse2_err_no_filters\'),\\n\\t\\t\'results\' => $modx->lexicon(\'mse2_err_no_results\'),\\n\\t\\t\'log\' => $log\\n\\t));\\n\\n\\tif (!empty($toSeparatePlaceholders)) {\\n\\t\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telseif (!empty($toPlaceholders)) {\\n\\t\\t$modx->setPlaceholders($output, $toPlaceholders);\\n\\t\\treturn;\\n\\t}\\n\\telse {\\n\\t\\t$output[\'results\'] .= $log;\\n\\t\\treturn $mSearch2->pdoTools->getChunk($scriptProperties[\'tplOuter\'], $output, $fastMode);\\n\\t}\\n}\\n\\n\\/\\/ ---------------------- Checking for suggestions processing\\n\\/\\/ Checking by results count\\nif (!empty($scriptProperties[\'suggestionsMaxResults\']) && count($ids) > $scriptProperties[\'suggestionsMaxResults\']) {\\n\\t$scriptProperties[\'suggestions\'] = false;\\n\\t$mSearch2->pdoTools->addTime(\'Suggestions disabled by \\"suggestionsMaxResults\\" parameter: results count is \'.count($ids).\', max allowed is \'.$scriptProperties[\'suggestionsMaxResults\']);\\n}\\nelse {\\n\\t$mSearch2->pdoTools->addTime(\'Total number of results: \'.count($ids));\\n}\\n\\n\\/\\/ Then get filters\\n$mSearch2->pdoTools->addTime(\'Getting filters for \'.count($ids).\' ids\');\\n$filters = $mSearch2->getFilters($ids);\\n\\/\\/ And checking by filters count\\n$count = 0;\\nif (!empty($filters) && $scriptProperties[\'suggestions\']) {\\n    foreach ($filters as $tmp) {\\n        if (!is_array($tmp)) {continue;}\\n        $count += count(array_values($tmp));\\n    }\\n    if (!empty($scriptProperties[\'suggestionsMaxFilters\']) && $count > $scriptProperties[\'suggestionsMaxFilters\']) {\\n        $scriptProperties[\'suggestions\'] = false;\\n        $mSearch2->pdoTools->addTime(\'Suggestions disabled by \\"suggestionsMaxFilters\\" parameter: filters count is \'.$count.\', max allowed is \'.$scriptProperties[\'suggestionsMaxFilters\']);\\n    }\\n    else {\\n        $mSearch2->pdoTools->addTime(\'Total number of filters: \'.$count);\\n    }\\n}\\n$modx->setPlaceholder($plPrefix . \'filters_count\', $count );\\n\\n\\n\\/\\/ ---------------------- Loading results\\n$start_sort = implode(\',\', array_map(\'trim\' , explode(\',\', $scriptProperties[\'sort\'])));\\n$start_limit = 0;\\n$suggestions = array();\\n$page = $sort = \'\';\\n\\n\\/\\/ Support for specifying property set in the paginator name\\n$paginatorName = $scriptProperties[\'paginator\'];\\n$paginatorSet = array();\\nif (strpos($paginatorName, \'@\') !== false) {\\n\\tlist($paginatorName, $paginatorSet) = explode(\'@\', $paginatorName);\\n}\\n\\n\\/** @var modSnippet $paginator *\\/\\nif (!$paginator = $modx->getObject(\'modSnippet\', array(\'name\' => $paginatorName))) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'[mSearch2] Could not find pagination snippet with name: \\"\'.$paginatorName.\'\\"\');\\n\\n    return \'\';\\n}\\n$paginatorProperties = $paginator->getProperties();\\n$paginatorPropertySet = !empty($paginatorSet)\\n    ? $paginator->getPropertySet($paginatorSet)\\n    : array();\\nif (!is_array($paginatorPropertySet)) {$paginatorPropertySet = array();}\\n$paginatorProperties = array_merge(\\n    $paginatorProperties,\\n    $paginatorPropertySet,\\n    $elementPropertySet,\\n    $scriptProperties,\\n    array(\\n        \'resources\' => implode(\',\', $ids),\\n        \'parents\' => \'0\',\\n        \'element\' => $elementName,\\n        \'defaultSort\' => $start_sort,\\n        \'toPlaceholder\' => false,\\n        \'limit\' => $limit,\\n        \'ajaxMode\' => \'\',\\n        \'ajax\' => 0,\\n        \'frontend_js\' => \'\',\\n        \'frontend_css\' => \'\',\\n    )\\n);\\n\\n\\/\\/ Switching chunk for rows, if specified\\nif (!empty($scriptProperties[\'tpls\'])) {\\n    $tmp = isset($_REQUEST[\'tpl\']) ? (integer) $_REQUEST[\'tpl\'] : 0;\\n    $tpls = array_map(\'trim\', explode(\',\', $scriptProperties[\'tpls\']));\\n    $paginatorProperties[\'tpls\'] = $tpls;\\n    if (isset($tpls[$tmp])) {\\n        $paginatorProperties[\'tpl\'] = $tpls[$tmp];\\n        $paginatorProperties[\'tpl_idx\'] = $tmp;\\n    }\\n}\\n\\n\\/\\/ Trying to save weight of found ids if using mSearch2\\n$weight = false;\\nif (!empty($found) && strtolower($elementName) == \'msearch2\') {\\n    $tmp = array();\\n    foreach ($ids as $v) {\\n        $tmp[$v] = isset($found[$v])\\n            ? $found[$v]\\n            : 0;\\n    }\\n    $paginatorProperties[\'resources\'] = $modx->toJSON($tmp);\\n    $weight = true;\\n}\\n\\nif (!empty($_REQUEST[\'sort\'])) {$sort = $_REQUEST[\'sort\'];}\\nelseif (!empty($start_sort)) {$sort = $start_sort;}\\n\\/*\\nelse {\\n    $sortby = !empty($scriptProperties[\'sortby\']) ? $scriptProperties[\'sortby\'] : \'\';\\n    if (!empty($sortby)) {\\n        $sortdir = !empty($scriptProperties[\'sortdir\']) ? $scriptProperties[\'sortdir\'] : \'asc\';\\n        $sort = $sortby.$mSearch2->config[\'method_delimeter\'].$sortdir;\\n    }\\n}*\\/\\nif (!empty($_REQUEST[$paginatorProperties[\'pageVarKey\']])) {\\n    $page = (int) $_REQUEST[$paginatorProperties[\'pageVarKey\']];\\n}\\nif (!empty($sort)) {\\n    $paginatorProperties[\'sortby\'] = $mSearch2->getSortFields($sort);\\n    $paginatorProperties[\'sortdir\'] = \'\';\\n}\\n\\n$start_limit = !empty($scriptProperties[\'limit\'])\\n        ? $scriptProperties[\'limit\']\\n        : $paginatorProperties[\'limit\'];\\n$paginatorProperties[\'start_limit\'] = $start_limit;\\n$savedProperties[\'paginatorProperties\'] = $paginatorProperties;\\n\\n\\/\\/ We have a delimiters in $_GET, so need to filter resources\\nif (strpos(implode(array_keys($_GET)), $mSearch2->config[\'filter_delimeter\']) !== false || !empty($mSearch2->aliases)) {\\n    $matched = $mSearch2->Filter($ids, $_REQUEST);\\n    $matched = array_intersect($ids, $matched);\\n    if ($scriptProperties[\'suggestions\']) {\\n        $suggestions = $mSearch2->getSuggestions($ids, $_REQUEST, $matched);\\n        $mSearch2->pdoTools->addTime(\'Suggestions retrieved.\');\\n    }\\n    \\/\\/ Trying to save weight of found ids again\\n    if ($weight) {\\n        $tmp = array();\\n        foreach ($matched as $v) {$tmp[$v] = isset($found[$v]) ? $found[$v] : 0;}\\n        $paginatorProperties[\'resources\'] = $modx->toJSON($tmp);\\n    }\\n    else {\\n        $paginatorProperties[\'resources\'] = implode(\',\', $matched);\\n    }\\n}\\n\\/\\/ Saving log\\n$log = $mSearch2->pdoTools->timings;\\n$mSearch2->pdoTools->timings = array();\\n\\n\\/\\/$paginator->setProperties($paginatorProperties);\\n$paginator->setCacheable(false);\\n$output[\'results\'] = !empty($paginatorProperties[\'resources\'])\\n    ? $paginator->process($paginatorProperties)\\n    : $modx->lexicon(\'mse2_err_no_results\');\\n$output[\'total\'] = $modx->getPlaceholder($paginatorProperties[\'totalVar\']);\\n\\n\\/\\/ ----------------------  Loading filters\\n$mSearch2->pdoTools->timings = $log;\\nif (!empty($paginator)) {\\n\\t$mSearch2->pdoTools->addTime(\'Fired paginator: \\"\'.$paginatorName.\'\\"\');\\n}\\nelse {\\n\\t$mSearch2->pdoTools->addTime(\'Could not find pagination snippet with name: \\"\'.$paginatorName.\'\\"\');\\n}\\nif (empty($filters)) {\\n\\t$mSearch2->pdoTools->addTime(\'No filters retrieved\');\\n\\t$output[\'filters\'] = $modx->lexicon(\'mse2_err_no_filters\');\\n\\tif (empty($output[\'results\'])) {$output[\'results\'] = $modx->lexicon(\'mse2_err_no_results\');}\\n}\\nelse {\\n\\t$mSearch2->pdoTools->addTime(\'Filters retrieved\');\\n\\t$request = array();\\n\\tforeach ($_GET as $k => $v) {\\n\\t\\t$tmp = explode($mSearch2->config[\'values_delimeter\'], $v);\\n\\t\\t$request[$k] = array();\\n\\t\\tforeach ($tmp as $v2) {\\n\\t\\t\\t$request[$k][] = str_replace(\'\\"\', \'&quot;\', $v2);\\n\\t\\t}\\n\\t}\\n\\n\\t$aliases = $mSearch2->aliases;\\n\\tforeach ($filters as $filter => $data) {\\n\\t\\tif (empty($data) || !is_array($data)) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\t$rows = $has_active = \'\';\\n\\t\\tlist($table, $method) = explode($mSearch2->config[\'filter_delimeter\'], $filter);\\n\\t\\t$filter_key = !empty($aliases[$filter])\\n\\t\\t\\t? $aliases[$filter]\\n\\t\\t\\t: $filter;\\n\\n\\t\\t$tplOuter = !empty($scriptProperties[\'tplFilter.outer.\' . $filter_key])\\n\\t\\t\\t? $scriptProperties[\'tplFilter.outer.\' . $filter_key]\\n\\t\\t\\t: $scriptProperties[\'tplFilter.outer.default\'];\\n\\t\\t$tplRow = !empty($scriptProperties[\'tplFilter.row.\' . $filter_key])\\n\\t\\t\\t? $scriptProperties[\'tplFilter.row.\' . $filter_key]\\n\\t\\t\\t: $scriptProperties[\'tplFilter.row.default\'];\\n\\t\\t$tplEmpty = !empty($scriptProperties[\'tplFilter.empty.\' . $filter_key])\\n\\t\\t\\t? $scriptProperties[\'tplFilter.empty.\' . $filter_key]\\n\\t\\t\\t: \'\';\\n\\n\\t\\t$idx = 0;\\n\\t\\tforeach ($data as $v) {\\n\\t\\t\\tif (empty($v)) {continue;}\\n\\t\\t\\t$checked = isset($request[$filter_key]) && in_array((string)$v[\'value\'], $request[$filter_key], true) && isset($v[\'type\']) && $v[\'type\'] != \'number\';\\n\\t\\t\\tif ($scriptProperties[\'suggestions\']) {\\n\\t\\t\\t\\tif ($checked) {\\n\\t\\t\\t\\t\\t$num = \'\';\\n\\t\\t\\t\\t\\t$has_active = \'has_active\';\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telseif (isset($suggestions[$filter_key][$v[\'value\']])) {\\n\\t\\t\\t\\t\\t$num = $suggestions[$filter_key][$v[\'value\']];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t$num = !empty($v[\'resources\'])\\n\\t\\t\\t\\t\\t\\t? count($v[\'resources\'])\\n\\t\\t\\t\\t\\t\\t: \'\';\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\t$num = \'\';\\n\\t\\t\\t}\\n\\n\\t\\t\\t$rows .= $mSearch2->pdoTools->getChunk($tplRow, array(\\n\\t\\t\\t\\t\'filter\' => $method,\\n\\t\\t\\t\\t\'table\' => $table,\\n\\t\\t\\t\\t\'title\' => $v[\'title\'],\\n\\t\\t\\t\\t\'value\' => $v[\'value\'],\\n\\t\\t\\t\\t\'type\' => $v[\'type\'],\\n\\t\\t\\t\\t\'checked\' => $checked\\n\\t\\t\\t\\t\\t? \'checked\'\\n\\t\\t\\t\\t\\t: \'\',\\n\\t\\t\\t\\t\'selected\' => $checked\\n\\t\\t\\t\\t\\t? \'selected\'\\n\\t\\t\\t\\t\\t: \'\',\\n\\t\\t\\t\\t\'disabled\' => !$checked && empty($num) && $scriptProperties[\'suggestions\']\\n\\t\\t\\t\\t\\t? \'disabled\'\\n\\t\\t\\t\\t\\t: \'\',\\n\\t\\t\\t\\t\'delimeter\' => $mSearch2->config[\'filter_delimeter\'],\\n\\t\\t\\t\\t\'idx\' => $idx++,\\n\\t\\t\\t\\t\'num\' => $num,\\n\\t\\t\\t\\t\'filter_key\' => $filter_key,\\n\\t\\t\\t), $fastMode);\\n\\t\\t}\\n\\n\\t\\t$tpl = empty($rows) ? $tplEmpty : $tplOuter;\\n\\t\\tif (!isset($output[\'filters\'][$filter])) {\\n\\t\\t\\t$output[\'filters\'][$filter] = \'\';\\n\\t\\t}\\n\\t\\t$output[\'filters\'][$filter] = $mSearch2->pdoTools->getChunk($tpl, array(\\n\\t\\t\\t\'filter\' => $method,\\n\\t\\t\\t\'table\' => $table,\\n\\t\\t\\t\'rows\' => $rows,\\n\\t\\t\\t\'has_active\' => $has_active,\\n\\t\\t\\t\'delimeter\' => $mSearch2->config[\'filter_delimeter\'],\\n\\t\\t\\t\'filter_key\' => $filter_key,\\n\\t\\t), $fastMode);\\n\\t}\\n\\n\\tif (empty($output[\'filters\'])) {\\n\\t\\t$output[\'filters\'] = $modx->lexicon(\'mse2_err_no_filters\');\\n\\t\\tif (empty($output[\'results\'])) {$output[\'results\'] = $modx->lexicon(\'mse2_err_no_results\');}\\n\\t}\\n\\telse {\\n\\t\\t$mSearch2->pdoTools->addTime(\'Filters templated\');\\n\\t}\\n}\\n$mSearch2->pdoTools->addTime(\'Total filter operations: \'.$mSearch2->filter_operations);\\n\\n\\/\\/ Saving params into cache for ajax requests\\n$savedProperties[\'scriptProperties\'] = $scriptProperties;\\n$hash = sha1(serialize($savedProperties));\\n$_SESSION[\'mSearch2\'][$hash] = $savedProperties;\\n\\n\\/\\/ Active class for sort links\\nif (!empty($sort)) {$output[$sort] = $classActive;}\\nif (isset($paginatorProperties[\'tpl_idx\'])) {\\n\\t$output[\'tpl\'.$paginatorProperties[\'tpl_idx\']] = $classActive;\\n\\t$output[\'tpls\'] = 1;\\n}\\n\\n\\/\\/ Setting values for frontend javascript\\n$config = array(\\n\\t\'cssUrl\' => $mSearch2->config[\'cssUrl\'].\'web\\/\',\\n\\t\'jsUrl\' => $mSearch2->config[\'jsUrl\'].\'web\\/\',\\n\\t\'actionUrl\' => $mSearch2->config[\'actionUrl\'],\\n\\t\'queryVar\' => $mSearch2->config[\'queryVar\'],\\n\\t\'idVar\' => $modx->getOption(\'request_param_id\', null, \'id\'),\\n\\t\'filter_delimeter\' => $mSearch2->config[\'filter_delimeter\'],\\n\\t\'method_delimeter\' => $mSearch2->config[\'method_delimeter\'],\\n\\t\'values_delimeter\' => $mSearch2->config[\'values_delimeter\'],\\n\\t\'start_sort\' => $start_sort,\\n\\t\'start_limit\' => $start_limit,\\n\\t\'start_page\' => 1,\\n\\t\'start_tpl\' => \'\',\\n\\t\'sort\' => $sort == $start_sort ? \'\' : $sort,\\n\\t\'limit\' => $limit == $start_limit ? \'\' : $limit,\\n\\t\'page\' => $page,\\n\\t\'pageVar\' => $paginatorProperties[\'pageVarKey\'],\\n\\t\'tpl\' => !empty($paginatorProperties[\'tpl_idx\'])\\n\\t\\t\\t? $paginatorProperties[\'tpl_idx\']\\n\\t\\t\\t: \'\',\\n\\t\'parentsVar\' => $parentsVar,\\n\\t\'key\' => $hash,\\n\\t\'pageId\' => !empty($pageId) ? (integer) $pageId : $modx->resource->id,\\n\\t$queryVar => isset($_REQUEST[$queryVar]) ? $_REQUEST[$queryVar] : \'\',\\n\\t$parentsVar => isset($_REQUEST[$parentsVar]) ? $_REQUEST[$parentsVar] : \'\',\\n\\t\'aliases\' => array_flip($mSearch2->aliases),\\n\\t\'options\' => array(),\\n\\t\'mode\' => in_array($scriptProperties[\'ajaxMode\'], array(\'button\', \'scroll\')) ? $scriptProperties[\'ajaxMode\'] : \'\',\\n\\t\'moreText\' => $modx->lexicon(\'mse2_more\'),\\n);\\nif (!empty($scriptProperties[\'filterOptions\'])) {\\n\\t$filterOptions = $modx->fromJSON($scriptProperties[\'filterOptions\']);\\n\\tif (is_array($filterOptions)) {\\n\\t\\t$config[\'filterOptions\'] = $filterOptions;\\n\\t}\\n}\\nif (empty($noJsConfig)) {\\n$modx->regClientStartupScript(\'\\n<script type=\\"text\\/javascript\\">mse2Config = \' . json_encode($config) . \';<\\/script>\', true);\\n}\\nif (empty($noJsInitialize)) {\\n$modx->regClientScript(\'\\n<script type=\\"text\\/javascript\\">\\n    if ($(\\"#mse2_mfilter\\").length) {\\n        if (window.location.hash != \\"\\" && mSearch2.Hash.oldbrowser()) {\\n            var uri = window.location.hash.replace(\\"#\\", \\"?\\");\\n            window.location.href = document.location.pathname + uri;\\n        }\\n        else {\\n            mSearch2.initialize(\\"body\\");\\n        }\\n    }\\n    <\\/script>\', true);\\n}\\n$modx->setPlaceholders($config, $plPrefix);\\n\\n\\/\\/ Prepare output\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n\\t$log = \'<pre class=\\"mFilterLog\\">\' . print_r($mSearch2->pdoTools->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nif (!empty($toSeparatePlaceholders)) {\\n\\t$modx->setPlaceholders($output[\'filters\'], $toSeparatePlaceholders);\\n\\t$output[\'log\'] = $log;\\n\\tif (is_array($output[\'filters\'])) {\\n\\t\\t$output[\'filters\'] = implode($outputSeparator, $output[\'filters\']);\\n\\t}\\n\\n\\t$pcre = \'#^\' . preg_quote($toSeparatePlaceholders) . \'(\\\\d+)$#\';\\n\\t$tmp = array();\\n\\tforeach ($modx->placeholders as $k => $v) {\\n\\t\\tif (preg_match($pcre, $k)) {\\n\\t\\t\\t$tmp[] = $v;\\n\\t\\t}\\n\\t}\\n\\n\\t$output[\'results\'] = !empty($tmp)\\n\\t\\t? implode($outputSeparator, $tmp)\\n\\t\\t: $modx->lexicon(\'mse2_err_no_results\');\\n\\n\\t$modx->setPlaceholders($output, $toSeparatePlaceholders);\\n}\\nelse {\\n\\tif (is_array($output[\'filters\'])) {\\n\\t\\t$output[\'filters\'] = implode($outputSeparator, $output[\'filters\']);\\n\\t}\\n\\tif (!empty($toPlaceholders)) {\\n\\t\\t$output[\'log\'] = $log;\\n\\t\\t$modx->setPlaceholders($output, $toPlaceholders);\\n\\t}\\n\\telse {\\n\\t\\t$output = $mSearch2->pdoTools->getChunk($scriptProperties[\'tplOuter\'], $output, $fastMode);\\n\\t\\t$output .= $log;\\n\\n\\t\\treturn $output;\\n\\t}\\n}"}',
);