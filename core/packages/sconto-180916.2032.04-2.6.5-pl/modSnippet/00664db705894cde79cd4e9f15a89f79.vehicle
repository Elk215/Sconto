<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '217e439c11e1fb2b1275d10a285f599f',
  'package' => 'modx',
  'class' => 'modSnippet',
  'signature' => '00664db705894cde79cd4e9f15a89f79',
  'native_key' => 56,
  'object' => '{"id":56,"source":0,"property_preprocess":0,"name":"SimpleSearchForm","description":"","editor_type":0,"category":25,"cache_type":0,"snippet":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * Show the search form\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n\\n\\/* setup default options *\\/\\n$scriptProperties = array_merge(array(\\n  \'tpl\' => \'SearchForm\',\\n  \'method\' => \'get\',\\n  \'searchIndex\' => \'search\',\\n  \'toPlaceholder\' => false,\\n  \'landing\' => $modx->resource->get(\'id\'),\\n), $scriptProperties);\\n\\nif (empty($scriptProperties[\'landing\'])) {\\n  $scriptProperties[\'landing\'] = $modx->resource->get(\'id\');\\n}\\n\\n\\/* if get value already exists, set it as default *\\/\\n$searchValue = isset($_REQUEST[$scriptProperties[\'searchIndex\']]) ? $_REQUEST[$scriptProperties[\'searchIndex\']] : \'\';\\n$searchValues = explode(\' \', $searchValue);\\narray_map(array($modx, \'sanitizeString\'), $searchValues);\\n$searchValue = implode(\' \', $searchValues);\\n$placeholders = array(\\n    \'method\' => $scriptProperties[\'method\'],\\n    \'landing\' => $scriptProperties[\'landing\'],\\n    \'searchValue\' => strip_tags(str_replace(array(\'[\',\']\',\'\\"\',\\"\'\\"),array(\'&#91;\',\'&#93;\',\'&quot;\',\'&apos;\'),$searchValue)),\\n    \'searchIndex\' => $scriptProperties[\'searchIndex\'],\\n);\\n\\n$output = $search->getChunk($scriptProperties[\'tpl\'],$placeholders);\\nreturn $search->output($output,$scriptProperties[\'toPlaceholder\']);","locked":0,"properties":"a:5:{s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:19:\\"sisea.tpl_form_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"SearchForm\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"landing\\";a:7:{s:4:\\"name\\";s:7:\\"landing\\";s:4:\\"desc\\";s:18:\\"sisea.landing_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"searchIndex\\";a:7:{s:4:\\"name\\";s:11:\\"searchIndex\\";s:4:\\"desc\\";s:22:\\"sisea.searchindex_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"search\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"method\\";a:7:{s:4:\\"name\\";s:6:\\"method\\";s:4:\\"desc\\";s:17:\\"sisea.method_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:9:\\"sisea.get\\";s:5:\\"value\\";s:3:\\"get\\";}i:1;a:2:{s:4:\\"text\\";s:10:\\"sisea.post\\";s:5:\\"value\\";s:4:\\"post\\";}}s:5:\\"value\\";s:3:\\"get\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:24:\\"sisea.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:16:\\"sisea:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * SimpleSearch\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun+sisea@modx.com>\\n *\\n * This file is part of SimpleSearch, a simple search component for MODx\\n * Revolution. It is loosely based off of AjaxSearch for MODx Evolution by\\n * coroico\\/kylej, minus the ajax.\\n *\\n * SimpleSearch is free software; you can redistribute it and\\/or modify it under\\n * the terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * SimpleSearch is distributed in the hope that it will be useful, but WITHOUT\\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\\n * details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * SimpleSearch; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package simplesearch\\n *\\/\\n\\/**\\n * Show the search form\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package simplesearch\\n *\\/\\nrequire_once $modx->getOption(\'sisea.core_path\',null,$modx->getOption(\'core_path\').\'components\\/simplesearch\\/\').\'model\\/simplesearch\\/simplesearch.class.php\';\\n$search = new SimpleSearch($modx,$scriptProperties);\\n\\n\\/* setup default options *\\/\\n$scriptProperties = array_merge(array(\\n  \'tpl\' => \'SearchForm\',\\n  \'method\' => \'get\',\\n  \'searchIndex\' => \'search\',\\n  \'toPlaceholder\' => false,\\n  \'landing\' => $modx->resource->get(\'id\'),\\n), $scriptProperties);\\n\\nif (empty($scriptProperties[\'landing\'])) {\\n  $scriptProperties[\'landing\'] = $modx->resource->get(\'id\');\\n}\\n\\n\\/* if get value already exists, set it as default *\\/\\n$searchValue = isset($_REQUEST[$scriptProperties[\'searchIndex\']]) ? $_REQUEST[$scriptProperties[\'searchIndex\']] : \'\';\\n$searchValues = explode(\' \', $searchValue);\\narray_map(array($modx, \'sanitizeString\'), $searchValues);\\n$searchValue = implode(\' \', $searchValues);\\n$placeholders = array(\\n    \'method\' => $scriptProperties[\'method\'],\\n    \'landing\' => $scriptProperties[\'landing\'],\\n    \'searchValue\' => strip_tags(str_replace(array(\'[\',\']\',\'\\"\',\\"\'\\"),array(\'&#91;\',\'&#93;\',\'&quot;\',\'&apos;\'),$searchValue)),\\n    \'searchIndex\' => $scriptProperties[\'searchIndex\'],\\n);\\n\\n$output = $search->getChunk($scriptProperties[\'tpl\'],$placeholders);\\nreturn $search->output($output,$scriptProperties[\'toPlaceholder\']);"}',
);