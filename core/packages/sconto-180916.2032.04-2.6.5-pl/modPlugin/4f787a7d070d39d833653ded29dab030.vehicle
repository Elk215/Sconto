<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '435e5348fbd277cc80d3c4f8b83cc87d',
  'package' => 'modx',
  'class' => 'modPlugin',
  'signature' => '4f787a7d070d39d833653ded29dab030',
  'native_key' => 2,
  'object' => '{"id":2,"source":1,"property_preprocess":0,"name":"controlErrorLog","description":"","editor_type":0,"category":4,"cache_type":0,"plugincode":"switch ($modx->event->name) {\\r\\n    case \'OnManagerPageBeforeRender\':\\r\\n        if ($modx->hasPermission(\'error_log_view\')) {\\r\\n            $modx->controller->addLexiconTopic(\'controlerrorlog:default\');\\r\\n            $modx->controller->addCss($modx->getOption(\'assets_url\').\'components\\/controlerrorlog\\/css\\/mgr\\/main.css\');\\r\\n            $modx->controller->addJavascript($modx->getOption(\'assets_url\').\'components\\/controlerrorlog\\/js\\/mgr\\/cel.default.js\');\\r\\n\\r\\n            $response = $modx->runProcessor(\'mgr\\/errorlog\\/get\', array(\'includeContent\'=>false), array(\'processors_path\' => $modx->getOption(\'core_path\') . \'components\\/controlerrorlog\\/processors\\/\'));\\r\\n            $resObj = $response->getObject();\\r\\n            $_html = \\"<script>\\tvar cel_config = \\" . $modx->toJSON($resObj) . \\"; <\\/script>\\";\\r\\n            $modx->controller->addHtml($_html);\\r\\n        }\\r\\n        break;\\r\\n    case \'OnWebPageComplete\':\\r\\n        $email = $modx->getOption(\'controlerrorlog.admin_email\');\\r\\n        if ($modx->context->get(\'key\') == \'mgr\' || empty($email) || !$modx->getOption(\'controlerrorlog.control_frontend\')) return;\\r\\n\\r\\n        $f = $modx->getOption(xPDO::OPT_CACHE_PATH) . \'logs\\/error.log\';\\r\\n        if (file_exists($f)) {\\r\\n            $casheHash = $modx->cacheManager->get(\'error_log\');\\r\\n            $hash = md5_file($f);\\r\\n            if (filesize($f) > 0 && !empty($casheHash)  &&  $casheHash != $hash) {\\r\\n                $modx->lexicon->load(\'controlerrorlog:default\');\\r\\n                \\/** @var modPHPMailer $mail *\\/\\r\\n                $mail = $modx->getService(\'mail\', \'mail.modPHPMailer\');\\r\\n                $mail->setHTML(true);\\r\\n\\r\\n                $mail->set(modMail::MAIL_SUBJECT, $modx->lexicon(\'error_log_email_subject\'));\\r\\n                $mail->set(modMail::MAIL_BODY, $modx->lexicon(\'error_log_email_body\', array(\'siteName\' => $modx->config[\'site_name\'])));\\r\\n                $mail->set(modMail::MAIL_SENDER, $modx->getOption(\'emailsender\'));\\r\\n                $mail->set(modMail::MAIL_FROM, $modx->getOption(\'emailsender\'));\\r\\n                $mail->set(modMail::MAIL_FROM_NAME, $modx->getOption(\'site_name\'));\\r\\n\\r\\n                $mail->address(\'to\', $email);\\r\\n                $mail->address(\'reply-to\', $modx->getOption(\'emailsender\'));\\r\\n\\r\\n                if (!$mail->send()) {\\r\\n                    print (\'An error occurred while trying to send the email: \'.$modx->mail->mailer->ErrorInfo);\\r\\n                }\\r\\n                $mail->reset();\\r\\n            }\\r\\n            if ($casheHash != $hash) {\\r\\n                $modx->cacheManager->set(\'error_log\', $hash, 0);\\r\\n            }\\r\\n        }\\r\\n        break;\\r\\n}","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"core\\/components\\/controlerrorlog\\/elements\\/plugins\\/plugin.controlerrorlog.php","content":"switch ($modx->event->name) {\\r\\n    case \'OnManagerPageBeforeRender\':\\r\\n        if ($modx->hasPermission(\'error_log_view\')) {\\r\\n            $modx->controller->addLexiconTopic(\'controlerrorlog:default\');\\r\\n            $modx->controller->addCss($modx->getOption(\'assets_url\').\'components\\/controlerrorlog\\/css\\/mgr\\/main.css\');\\r\\n            $modx->controller->addJavascript($modx->getOption(\'assets_url\').\'components\\/controlerrorlog\\/js\\/mgr\\/cel.default.js\');\\r\\n\\r\\n            $response = $modx->runProcessor(\'mgr\\/errorlog\\/get\', array(\'includeContent\'=>false), array(\'processors_path\' => $modx->getOption(\'core_path\') . \'components\\/controlerrorlog\\/processors\\/\'));\\r\\n            $resObj = $response->getObject();\\r\\n            $_html = \\"<script>\\tvar cel_config = \\" . $modx->toJSON($resObj) . \\"; <\\/script>\\";\\r\\n            $modx->controller->addHtml($_html);\\r\\n        }\\r\\n        break;\\r\\n    case \'OnWebPageComplete\':\\r\\n        $email = $modx->getOption(\'controlerrorlog.admin_email\');\\r\\n        if ($modx->context->get(\'key\') == \'mgr\' || empty($email) || !$modx->getOption(\'controlerrorlog.control_frontend\')) return;\\r\\n\\r\\n        $f = $modx->getOption(xPDO::OPT_CACHE_PATH) . \'logs\\/error.log\';\\r\\n        if (file_exists($f)) {\\r\\n            $casheHash = $modx->cacheManager->get(\'error_log\');\\r\\n            $hash = md5_file($f);\\r\\n            if (filesize($f) > 0 && !empty($casheHash)  &&  $casheHash != $hash) {\\r\\n                $modx->lexicon->load(\'controlerrorlog:default\');\\r\\n                \\/** @var modPHPMailer $mail *\\/\\r\\n                $mail = $modx->getService(\'mail\', \'mail.modPHPMailer\');\\r\\n                $mail->setHTML(true);\\r\\n\\r\\n                $mail->set(modMail::MAIL_SUBJECT, $modx->lexicon(\'error_log_email_subject\'));\\r\\n                $mail->set(modMail::MAIL_BODY, $modx->lexicon(\'error_log_email_body\', array(\'siteName\' => $modx->config[\'site_name\'])));\\r\\n                $mail->set(modMail::MAIL_SENDER, $modx->getOption(\'emailsender\'));\\r\\n                $mail->set(modMail::MAIL_FROM, $modx->getOption(\'emailsender\'));\\r\\n                $mail->set(modMail::MAIL_FROM_NAME, $modx->getOption(\'site_name\'));\\r\\n\\r\\n                $mail->address(\'to\', $email);\\r\\n                $mail->address(\'reply-to\', $modx->getOption(\'emailsender\'));\\r\\n\\r\\n                if (!$mail->send()) {\\r\\n                    print (\'An error occurred while trying to send the email: \'.$modx->mail->mailer->ErrorInfo);\\r\\n                }\\r\\n                $mail->reset();\\r\\n            }\\r\\n            if ($casheHash != $hash) {\\r\\n                $modx->cacheManager->set(\'error_log\', $hash, 0);\\r\\n            }\\r\\n        }\\r\\n        break;\\r\\n}"}',
);